{"ast":null,"code":"import React from\"react\";import{connect}from\"react-redux\";import contactActions from\"../../redux/contact/contact-actions\";import contactSelectors from\"../../redux/contact/contact-selectors\";function FindContactInput(_ref){var value=_ref.value,onChange=_ref.onChange;return/*#__PURE__*/React.createElement(\"div\",{className:\"find-input_frame \"},/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"input\",{className:\"input\",type:\"text\",value:value,onChange:onChange})));}// const mapStateToProps = (state) => {\n//   const { items, filter } = state.contacts;\n//   const filteredContacts = items.filter((contact) =>\n//     contact.name.toLowerCase().includes(filter.toLowerCase())\n//   );\n//   return {\n//     contacts: filteredContacts,\n//   };\n// };\nvar mapStateToProps=function mapStateToProps(state){return{value:contactSelectors.getFilter(state)};};// const mapDispatchToProps = (dispatch = {\n//   onChangeFilter: (e) => dispatch(contactActions.changeFilter(e.target.value)),\n//   // contactActions.changeFilter,\n// });\nvar mapDispatchToProps=function mapDispatchToProps(dispatch){return{onChange:function onChange(e){return dispatch(contactActions.changeFilter(e.target.value));}};};export default connect(mapStateToProps,mapDispatchToProps)(FindContactInput);","map":{"version":3,"sources":["/Users/anastasia/Documents/React-BC-22/goit-react-hw-07-phonebook/src/components/findContactInput/FindContactInput.js"],"names":["React","connect","contactActions","contactSelectors","FindContactInput","value","onChange","mapStateToProps","state","getFilter","mapDispatchToProps","dispatch","e","changeFilter","target"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,cAAP,KAA2B,qCAA3B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,uCAA7B,CAEA,QAASC,CAAAA,gBAAT,MAA+C,IAAnBC,CAAAA,KAAmB,MAAnBA,KAAmB,CAAZC,QAAY,MAAZA,QAAY,CAC7C,mBACE,2BAAK,SAAS,CAAC,mBAAf,eACE,8CACE,6BACE,SAAS,CAAC,OADZ,CAEE,IAAI,CAAC,MAFP,CAGE,KAAK,CAAED,KAHT,CAIE,QAAQ,CAAEC,QAJZ,EADF,CADF,CADF,CAYD,CAED;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCH,KAAK,CAAEF,gBAAgB,CAACM,SAAjB,CAA2BD,KAA3B,CAD2B,CAAZ,EAAxB,CAGA;AACA;AACA;AACA;AAEA,GAAME,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,QAAe,CACxCL,QAAQ,CAAE,kBAACM,CAAD,QAAOD,CAAAA,QAAQ,CAACT,cAAc,CAACW,YAAf,CAA4BD,CAAC,CAACE,MAAF,CAAST,KAArC,CAAD,CAAf,EAD8B,CAAf,EAA3B,CAGA,cAAeJ,CAAAA,OAAO,CAACM,eAAD,CAAkBG,kBAAlB,CAAP,CAA6CN,gBAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport contactActions from \"../../redux/contact/contact-actions\";\nimport contactSelectors from \"../../redux/contact/contact-selectors\";\n\nfunction FindContactInput({ value, onChange }) {\n  return (\n    <div className=\"find-input_frame \">\n      <label>\n        <input\n          className=\"input\"\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        ></input>\n      </label>\n    </div>\n  );\n}\n\n// const mapStateToProps = (state) => {\n//   const { items, filter } = state.contacts;\n\n//   const filteredContacts = items.filter((contact) =>\n//     contact.name.toLowerCase().includes(filter.toLowerCase())\n//   );\n//   return {\n//     contacts: filteredContacts,\n//   };\n// };\nconst mapStateToProps = (state) => ({\n  value: contactSelectors.getFilter(state),\n});\n// const mapDispatchToProps = (dispatch = {\n//   onChangeFilter: (e) => dispatch(contactActions.changeFilter(e.target.value)),\n//   // contactActions.changeFilter,\n// });\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(contactActions.changeFilter(e.target.value)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(FindContactInput);\n"]},"metadata":{},"sourceType":"module"}