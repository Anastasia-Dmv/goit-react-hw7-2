{"ast":null,"code":"import contactsActions from \"../contact/contact-actions\";\nimport axios from \"axios\";\n\nconst addContact = (name, number) => dispatch => {\n  dispatch(contactsActions.addContactRequest()); //fetch(\"http://localhost:2000/contacts\");\n  // console.log(\"contact\", contact);\n\n  axios.post(\"https://react7-b91fe.firebaseio.com/contacts.json\", {\n    name,\n    number\n  }).then(response => {\n    console.log(\"resrtduytfuy\", response.data);\n    dispatch(contactsActions.addContactSuccess({\n      name,\n      number,\n      id: response.data.name\n    }));\n  }).catch(error => dispatch(contactsActions.addContactError(error)));\n};\n\nconst fetchContacts = () => dispatch => {\n  dispatch(contactsActions.fetchContactsRequest());\n  axios.get(\"https://react7-b91fe.firebaseio.com/contacts.json\").then(({\n    data\n  }) => dispatch(contactsActions.fetchContactsSuccess(data))).catch(error => dispatch(contactsActions.fetchContactsError(error)));\n};\n\nconst removeContact = id => dispatch => {\n  dispatch(contactsActions.removeContactRequest());\n  axios.delete(`http://localhost:2000/contacts/${id}`).then(() => dispatch(contactsActions.removeContactSuccess(id))).catch(error => dispatch(contactsActions.removeContactError(error)));\n};\n\nexport default {\n  addContact,\n  fetchContacts,\n  removeContact\n};","map":{"version":3,"sources":["/Users/anastasia/Documents/React-BC-22/goit-react-hw7-2/src/redux/contactsOperations/contactsOperation.js"],"names":["contactsActions","axios","addContact","name","number","dispatch","addContactRequest","post","then","response","console","log","data","addContactSuccess","id","catch","error","addContactError","fetchContacts","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError","removeContact","removeContactRequest","delete","removeContactSuccess","removeContactError"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,4BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAU,GAAG,CAACC,IAAD,EAAOC,MAAP,KAAmBC,QAAD,IAAc;AACjDA,EAAAA,QAAQ,CAACL,eAAe,CAACM,iBAAhB,EAAD,CAAR,CADiD,CAEjD;AACA;;AACAL,EAAAA,KAAK,CACFM,IADH,CACQ,mDADR,EAC6D;AAAEJ,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAD7D,EAEGI,IAFH,CAESC,QAAD,IAAc;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,QAAQ,CAACG,IAArC;AACAP,IAAAA,QAAQ,CACNL,eAAe,CAACa,iBAAhB,CAAkC;AAChCV,MAAAA,IADgC;AAEhCC,MAAAA,MAFgC;AAGhCU,MAAAA,EAAE,EAAEL,QAAQ,CAACG,IAAT,CAAcT;AAHc,KAAlC,CADM,CAAR;AAOD,GAXH,EAYGY,KAZH,CAYUC,KAAD,IAAWX,QAAQ,CAACL,eAAe,CAACiB,eAAhB,CAAgCD,KAAhC,CAAD,CAZ5B;AAaD,CAjBD;;AAmBA,MAAME,aAAa,GAAG,MAAOb,QAAD,IAAc;AACxCA,EAAAA,QAAQ,CAACL,eAAe,CAACmB,oBAAhB,EAAD,CAAR;AACAlB,EAAAA,KAAK,CACFmB,GADH,CACO,mDADP,EAEGZ,IAFH,CAEQ,CAAC;AAAEI,IAAAA;AAAF,GAAD,KAAcP,QAAQ,CAACL,eAAe,CAACqB,oBAAhB,CAAqCT,IAArC,CAAD,CAF9B,EAGGG,KAHH,CAGUC,KAAD,IAAWX,QAAQ,CAACL,eAAe,CAACsB,kBAAhB,CAAmCN,KAAnC,CAAD,CAH5B;AAID,CAND;;AAQA,MAAMO,aAAa,GAAIT,EAAD,IAAST,QAAD,IAAc;AAC1CA,EAAAA,QAAQ,CAACL,eAAe,CAACwB,oBAAhB,EAAD,CAAR;AACAvB,EAAAA,KAAK,CACFwB,MADH,CACW,kCAAiCX,EAAG,EAD/C,EAEGN,IAFH,CAEQ,MAAMH,QAAQ,CAACL,eAAe,CAAC0B,oBAAhB,CAAqCZ,EAArC,CAAD,CAFtB,EAGGC,KAHH,CAGUC,KAAD,IAAWX,QAAQ,CAACL,eAAe,CAAC2B,kBAAhB,CAAmCX,KAAnC,CAAD,CAH5B;AAID,CAND;;AAOA,eAAe;AACbd,EAAAA,UADa;AAEbgB,EAAAA,aAFa;AAGbK,EAAAA;AAHa,CAAf","sourcesContent":["import contactsActions from \"../contact/contact-actions\";\nimport axios from \"axios\";\n\nconst addContact = (name, number) => (dispatch) => {\n  dispatch(contactsActions.addContactRequest());\n  //fetch(\"http://localhost:2000/contacts\");\n  // console.log(\"contact\", contact);\n  axios\n    .post(\"https://react7-b91fe.firebaseio.com/contacts.json\", { name, number })\n    .then((response) => {\n      console.log(\"resrtduytfuy\", response.data);\n      dispatch(\n        contactsActions.addContactSuccess({\n          name,\n          number,\n          id: response.data.name,\n        })\n      );\n    })\n    .catch((error) => dispatch(contactsActions.addContactError(error)));\n};\n\nconst fetchContacts = () => (dispatch) => {\n  dispatch(contactsActions.fetchContactsRequest());\n  axios\n    .get(\"https://react7-b91fe.firebaseio.com/contacts.json\")\n    .then(({ data }) => dispatch(contactsActions.fetchContactsSuccess(data)))\n    .catch((error) => dispatch(contactsActions.fetchContactsError(error)));\n};\n\nconst removeContact = (id) => (dispatch) => {\n  dispatch(contactsActions.removeContactRequest());\n  axios\n    .delete(`http://localhost:2000/contacts/${id}`)\n    .then(() => dispatch(contactsActions.removeContactSuccess(id)))\n    .catch((error) => dispatch(contactsActions.removeContactError(error)));\n};\nexport default {\n  addContact,\n  fetchContacts,\n  removeContact,\n};\n"]},"metadata":{},"sourceType":"module"}