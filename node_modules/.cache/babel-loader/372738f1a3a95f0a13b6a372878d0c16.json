{"ast":null,"code":"import { combineReducers } from \"redux\"; //import actionTypes from \"./contact-types\";\n\nimport actionTypes from \"./contact-actions\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nconst contactsTestReducer = createReducer([], {\n  [actionTypes.addContact]: (state, action) => [...state, action.payload.contact],\n  [actionTypes.deleteContact]: (state, action) => state.filter(contact => contact.id !== action.payload),\n  [actionTypes.changeFilter]: (state, action) => action.payload\n}); // {\n//   contacts: {\n//     items: [],\n//     filter: ''\n//   }\n// }\n// export const items = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case actionTypes.addContact.type:\n//       return [...state, payload.contact];\n//     case actionTypes.deleteContact.type:\n//       return state.filter((contact) => contact.id !== payload);\n//     default:\n//       return state;\n//   }\n// };\n// export const filter = (state = \"\", { type, payload }) => {\n//   switch (type) {\n//     case actionTypes.changeFilter.type:\n//       return payload;\n//     default:\n//       return state;\n//   }\n// };\n\nexport default combineReducers({\n  items,\n  filter\n});","map":{"version":3,"sources":["/Users/anastasia/Documents/React-BC-22/goit-react-hw-06-phonebook/src/redux/contact/contact-reducer.js"],"names":["combineReducers","actionTypes","createReducer","contactsTestReducer","addContact","state","action","payload","contact","deleteContact","filter","id","changeFilter","items"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC,C,CACA;;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AAEA,SAASC,aAAT,QAA8B,kBAA9B;AACA,MAAMC,mBAAmB,GAAGD,aAAa,CAAC,EAAD,EAAK;AAC5C,GAACD,WAAW,CAACG,UAAb,GAA0B,CAACC,KAAD,EAAQC,MAAR,KAAmB,CAC3C,GAAGD,KADwC,EAE3CC,MAAM,CAACC,OAAP,CAAeC,OAF4B,CADD;AAK5C,GAACP,WAAW,CAACQ,aAAb,GAA6B,CAACJ,KAAD,EAAQC,MAAR,KAC3BD,KAAK,CAACK,MAAN,CAAcF,OAAD,IAAaA,OAAO,CAACG,EAAR,KAAeL,MAAM,CAACC,OAAhD,CAN0C;AAO5C,GAACN,WAAW,CAACW,YAAb,GAA4B,CAACP,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC;AAPV,CAAL,CAAzC,C,CAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeP,eAAe,CAAC;AAC7Ba,EAAAA,KAD6B;AAE7BH,EAAAA;AAF6B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from \"redux\";\n//import actionTypes from \"./contact-types\";\nimport actionTypes from \"./contact-actions\";\n\nimport { createReducer } from \"@reduxjs/toolkit\";\nconst contactsTestReducer = createReducer([], {\n  [actionTypes.addContact]: (state, action) => [\n    ...state,\n    action.payload.contact,\n  ],\n  [actionTypes.deleteContact]: (state, action) =>\n    state.filter((contact) => contact.id !== action.payload),\n  [actionTypes.changeFilter]: (state, action) => action.payload,\n});\n\n// {\n//   contacts: {\n//     items: [],\n//     filter: ''\n//   }\n// }\n// export const items = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case actionTypes.addContact.type:\n//       return [...state, payload.contact];\n//     case actionTypes.deleteContact.type:\n//       return state.filter((contact) => contact.id !== payload);\n//     default:\n//       return state;\n//   }\n// };\n// export const filter = (state = \"\", { type, payload }) => {\n//   switch (type) {\n//     case actionTypes.changeFilter.type:\n//       return payload;\n//     default:\n//       return state;\n//   }\n// };\n\nexport default combineReducers({\n  items,\n  filter,\n});\n"]},"metadata":{},"sourceType":"module"}