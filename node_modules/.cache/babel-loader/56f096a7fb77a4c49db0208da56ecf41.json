{"ast":null,"code":"var _jsxFileName = \"/Users/anastasia/Documents/React-BC-22/goit-react-hw-06-phonebook/src/components/app/App.js\";\nimport React, { Component } from \"react\"; //import { v4 as uuidv4 } from \"uuid\";\n\nimport { connect } from \"react-redux\"; //import contactsActions from \"../../redux/contact/contact-actions\";\n\nimport MainTitle from \"../mainTitle/MainTitle\";\nimport ContactForm from \"../contactForm/ContactForm\";\nimport FindContactInput from \"../findContactInput/FindContactInput\";\nimport ContactsList from \"../contactsList/ContactsList\";\nimport { CSSTransition } from \"react-transition-group\";\nimport contactActions from \"../../redux/contact/contact-actions\"; //import { items } from \"../../redux/contact/contact-reducer\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // contacts: [\n      //   { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      //   { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      //   { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      //   { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n      // ],\n      // filter: \"\",\n      showContacts: false\n    };\n  }\n\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem(\"contacts\");\n\n    if (persistedContacts) {\n      JSON.parse(persistedContacts).map(contact => this.props.addContact(contact));\n    }\n  } // componentDidMount() {\n  //   const persistedContacts = localStorage.getItem(\"contacts\");\n  //   if (persistedContacts) {\n  //     console.log(\"persistedContacts\", persistedContacts);\n  //     this.props.saveInStorage(JSON.parse(persistedContacts));\n  //   }\n  // }\n\n\n  componentDidUpdate(prevProps) {\n    const {\n      contacts\n    } = this.props;\n\n    if (prevProps.contacts !== contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n    }\n  } // componentDidUpdate(prevProps, prevState) {\n  //   if (prevProps.contacts !== this.props.contacts) {\n  //     console.log(\"this.props.contacts\", this.props.contacts);\n  //     localStorage.setItem(\"contacts\", JSON.stringify(this.props.contacts));\n  //   }\n  // }\n  // addContact = (name, number) => {\n  //   const contact = {\n  //     name: name,\n  //     number: number,\n  //     id: uuidv4(),\n  //   };\n  //   this.setState((prevState) => {\n  //     return {\n  //       contacts: [...prevState.contacts, contact],\n  //       showContacts: true,\n  //     };\n  //   });\n  // };\n  // changeFilter = (filter) => {\n  //   this.setState({ filter });\n  // };\n  // getFilteredContacts = () => {\n  //   const { contacts, filter } = this.state;\n  //   return contacts.filter((contact) =>\n  //     contact.name.toLowerCase().includes(filter.toLowerCase())\n  //   );\n  // };\n  // handleDelete = (id) => {\n  //   this.setState((prevState) => ({\n  //     contacts: prevState.contacts.filter((contact) => contact.id !== id),\n  //   }));\n  // };\n\n\n  render() {\n    //const { filter, contacts } = this.state;\n    //const filteredContacts = this.getFilteredContacts();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CSSTransition, {\n      in: true,\n      appear: true,\n      classNames: \"mainTitle-slideIn\",\n      timeout: 5000,\n      unmountOnExit: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MainTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(ContactForm // addContact={this.addContact}\n    // contacts={this.state.contacts}\n    , {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CSSTransition, {\n      in: this.props.filteredContacts.length >= 1,\n      timeout: 250,\n      classNames: \"findContact\",\n      unmountOnExit: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FindContactInput, {\n      value: this.props.filter,\n      onChangeFilter: this.changeFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(ContactsList // deleteContact={this.handleDelete} contacts={contacts}\n    , {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    items,\n    filter\n  } = state.contacts;\n  const getfilteredContacts = items.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  return {\n    filteredContacts: getfilteredContacts,\n    filter: state.contacts.filter\n  };\n};\n\nconst mapDispatchToProps = {\n  onChangeFilter: contactActions.changeFilter\n}; //const mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App); //export default App;","map":{"version":3,"sources":["/Users/anastasia/Documents/React-BC-22/goit-react-hw-06-phonebook/src/components/app/App.js"],"names":["React","Component","connect","MainTitle","ContactForm","FindContactInput","ContactsList","CSSTransition","contactActions","App","state","showContacts","componentDidMount","persistedContacts","localStorage","getItem","JSON","parse","map","contact","props","addContact","componentDidUpdate","prevProps","contacts","setItem","stringify","render","filteredContacts","length","filter","changeFilter","mapStateToProps","items","getfilteredContacts","name","toLowerCase","includes","mapDispatchToProps","onChangeFilter"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n//import { v4 as uuidv4 } from \"uuid\";\nimport { connect } from \"react-redux\";\n//import contactsActions from \"../../redux/contact/contact-actions\";\n\nimport MainTitle from \"../mainTitle/MainTitle\";\nimport ContactForm from \"../contactForm/ContactForm\";\nimport FindContactInput from \"../findContactInput/FindContactInput\";\nimport ContactsList from \"../contactsList/ContactsList\";\nimport { CSSTransition } from \"react-transition-group\";\nimport contactActions from \"../../redux/contact/contact-actions\";\n//import { items } from \"../../redux/contact/contact-reducer\";\n\nclass App extends Component {\n  state = {\n    // contacts: [\n    //   { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    //   { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    //   { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    //   { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    // ],\n    // filter: \"\",\n    showContacts: false,\n  };\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem(\"contacts\");\n    if (persistedContacts) {\n      JSON.parse(persistedContacts).map((contact) =>\n        this.props.addContact(contact)\n      );\n    }\n  }\n  // componentDidMount() {\n  //   const persistedContacts = localStorage.getItem(\"contacts\");\n  //   if (persistedContacts) {\n  //     console.log(\"persistedContacts\", persistedContacts);\n  //     this.props.saveInStorage(JSON.parse(persistedContacts));\n  //   }\n  // }\n\n  componentDidUpdate(prevProps) {\n    const { contacts } = this.props;\n    if (prevProps.contacts !== contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n    }\n  }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (prevProps.contacts !== this.props.contacts) {\n  //     console.log(\"this.props.contacts\", this.props.contacts);\n  //     localStorage.setItem(\"contacts\", JSON.stringify(this.props.contacts));\n  //   }\n  // }\n  // addContact = (name, number) => {\n  //   const contact = {\n  //     name: name,\n  //     number: number,\n  //     id: uuidv4(),\n  //   };\n\n  //   this.setState((prevState) => {\n  //     return {\n  //       contacts: [...prevState.contacts, contact],\n  //       showContacts: true,\n  //     };\n  //   });\n  // };\n  // changeFilter = (filter) => {\n  //   this.setState({ filter });\n  // };\n\n  // getFilteredContacts = () => {\n  //   const { contacts, filter } = this.state;\n\n  //   return contacts.filter((contact) =>\n  //     contact.name.toLowerCase().includes(filter.toLowerCase())\n  //   );\n  // };\n  // handleDelete = (id) => {\n  //   this.setState((prevState) => ({\n  //     contacts: prevState.contacts.filter((contact) => contact.id !== id),\n  //   }));\n  // };\n\n  render() {\n    //const { filter, contacts } = this.state;\n\n    //const filteredContacts = this.getFilteredContacts();\n    return (\n      <div>\n        <CSSTransition\n          in={true}\n          appear={true}\n          classNames=\"mainTitle-slideIn\"\n          timeout={5000}\n          unmountOnExit\n        >\n          <MainTitle />\n        </CSSTransition>\n\n        <ContactForm\n        // addContact={this.addContact}\n        // contacts={this.state.contacts}\n        />\n        {/* {this.props.filteredContacts && ( */}\n        <CSSTransition\n          in={this.props.filteredContacts.length >= 1}\n          timeout={250}\n          classNames=\"findContact\"\n          unmountOnExit\n        >\n          {/* {this.props.filteredContacts.length > 0 && ( */}\n          <FindContactInput\n            value={this.props.filter}\n            onChangeFilter={this.changeFilter}\n          />\n          {/* )} */}\n        </CSSTransition>\n        {/* )} */}\n        {/* <CSSTransition in={showContacts} inmountOnExit> */}\n        {/* {this.state.contacts && ( */}\n        <ContactsList\n        // deleteContact={this.handleDelete} contacts={contacts}\n        />\n        {/* )} */}\n        {/* </CSSTransition> */}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  const { items, filter } = state.contacts;\n\n  const getfilteredContacts = items.filter((contact) =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n  return {\n    filteredContacts: getfilteredContacts,\n    filter: state.contacts.filter,\n  };\n};\nconst mapDispatchToProps = {\n  onChangeFilter: contactActions.changeFilter,\n};\n//const mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n//export default App;\n"]},"metadata":{},"sourceType":"module"}