{"ast":null,"code":"import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getLoading = state => state.contacts.loading;\n\nconst getFilter = state => state.contacts.filter;\n\nconst getContacts = state => state.contacts.items;\n\nconst getContactById = createSelector([(state, contactId) => contactId, getContacts], (contactId, contacts) => {\n  return contacts.find(contact => contact.id === contactId);\n});\nconst getContactsFiltered = createSelector([getContacts, getFilter], (contacts, filter) => {\n  return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n}); // const getContactById = (state, contactId) => {\n//   const contacts = getContacts(state);\n//   return contacts.find((contact) => contact.id === contactId);\n// };\n// const getContactsFiltered = (state) => {\n//   const contacts = getContacts(state);\n//   const normalizedFilter = getFilter(state).toLowerCase();\n//   return contacts.filter((contact) =>\n//     contact.name.toLowerCase().includes(normalizedFilter)\n//   );\n// };\n\nexport default {\n  getLoading,\n  getFilter,\n  getContacts,\n  getContactById,\n  //getContactsFiltered,\n  getContactsFiltered //getContactByIdSl\n\n};","map":{"version":3,"sources":["/Users/anastasia/Documents/React-BC-22/goit-react-hw-06-phonebook/src/redux/contact/contact-selectors.js"],"names":["createSelector","getLoading","state","contacts","loading","getFilter","filter","getContacts","items","getContactById","contactId","find","contact","id","getContactsFiltered","name","toLowerCase","includes"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeC,OAA7C;;AACA,MAAMC,SAAS,GAAIH,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeG,MAA5C;;AACA,MAAMC,WAAW,GAAIL,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeK,KAA9C;;AAEA,MAAMC,cAAc,GAAGT,cAAc,CACnC,CAAC,CAACE,KAAD,EAAQQ,SAAR,KAAsBA,SAAvB,EAAkCH,WAAlC,CADmC,EAEnC,CAACG,SAAD,EAAYP,QAAZ,KAAyB;AACvB,SAAOA,QAAQ,CAACQ,IAAT,CAAeC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeH,SAA1C,CAAP;AACD,CAJkC,CAArC;AAOA,MAAMI,mBAAmB,GAAGd,cAAc,CACxC,CAACO,WAAD,EAAcF,SAAd,CADwC,EAExC,CAACF,QAAD,EAAWG,MAAX,KAAsB;AACpB,SAAOH,QAAQ,CAACG,MAAT,CAAiBM,OAAD,IACrBA,OAAO,CAACG,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCX,MAAM,CAACU,WAAP,EAApC,CADK,CAAP;AAGD,CANuC,CAA1C,C,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe;AACbf,EAAAA,UADa;AAEbI,EAAAA,SAFa;AAGbE,EAAAA,WAHa;AAIbE,EAAAA,cAJa;AAKb;AACAK,EAAAA,mBANa,CAQb;;AARa,CAAf","sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getLoading = (state) => state.contacts.loading;\nconst getFilter = (state) => state.contacts.filter;\nconst getContacts = (state) => state.contacts.items;\n\nconst getContactById = createSelector(\n  [(state, contactId) => contactId, getContacts],\n  (contactId, contacts) => {\n    return contacts.find((contact) => contact.id === contactId);\n  }\n);\n\nconst getContactsFiltered = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n// const getContactById = (state, contactId) => {\n//   const contacts = getContacts(state);\n//   return contacts.find((contact) => contact.id === contactId);\n// };\n// const getContactsFiltered = (state) => {\n//   const contacts = getContacts(state);\n//   const normalizedFilter = getFilter(state).toLowerCase();\n//   return contacts.filter((contact) =>\n//     contact.name.toLowerCase().includes(normalizedFilter)\n//   );\n// };\nexport default {\n  getLoading,\n  getFilter,\n  getContacts,\n  getContactById,\n  //getContactsFiltered,\n  getContactsFiltered,\n\n  //getContactByIdSl\n};\n"]},"metadata":{},"sourceType":"module"}