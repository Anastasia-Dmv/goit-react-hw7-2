{"ast":null,"code":"import contactsActions from\"../contact/contact-actions\";import axios from\"axios\";var addContact=function addContact(name,number){return function(dispatch){dispatch(contactsActions.addContactRequest());//fetch(\"http://localhost:2000/contacts\");\naxios.post(\"http://localhost:2000/contacts\",{name:name,number:number}).then(function(response){console.log(response);dispatch(contactsActions.addContactSuccess(response.data));}).catch(function(error){return dispatch(contactsActions.addContactError(error));});};};var fetchContacts=function fetchContacts(){return function(dispatch){dispatch(contactsActions.fetchContactsRequest());axios.get(\"http://localhost:2000/contacts\").then(function(_ref){var data=_ref.data;return dispatch(contactsActions.fetchContactsSuccess(data));}).catch(function(error){return dispatch(contactsActions.fetchContactsError(error));});};};var removeContact=function removeContact(id){return function(dispatch){dispatch(contactsActions.removeContactRequest());axios.delete(\"http://localhost:2000/contacts/\".concat(id)).then(function(){return dispatch(contactsActions.removeContactSuccess(id));}).catch(function(error){return dispatch(contactsActions.removeContactError(error));});};};export default{addContact:addContact,fetchContacts:fetchContacts,removeContact:removeContact};","map":{"version":3,"sources":["/Users/anastasia/Documents/React-BC-22/goit-react-hw-07-phonebook/src/redux/contactsOperations/contactsOperation.js"],"names":["contactsActions","axios","addContact","name","number","dispatch","addContactRequest","post","then","response","console","log","addContactSuccess","data","catch","error","addContactError","fetchContacts","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError","removeContact","id","removeContactRequest","delete","removeContactSuccess","removeContactError"],"mappings":"AAAA,MAAOA,CAAAA,eAAP,KAA4B,4BAA5B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,CAAOC,MAAP,QAAkB,UAACC,QAAD,CAAc,CACjDA,QAAQ,CAACL,eAAe,CAACM,iBAAhB,EAAD,CAAR,CACA;AACAL,KAAK,CACFM,IADH,CACQ,gCADR,CAC0C,CAAEJ,IAAI,CAAJA,IAAF,CAAQC,MAAM,CAANA,MAAR,CAD1C,EAEGI,IAFH,CAEQ,SAACC,QAAD,CAAc,CAClBC,OAAO,CAACC,GAAR,CAAYF,QAAZ,EACAJ,QAAQ,CAACL,eAAe,CAACY,iBAAhB,CAAkCH,QAAQ,CAACI,IAA3C,CAAD,CAAR,CACD,CALH,EAMGC,KANH,CAMS,SAACC,KAAD,QAAWV,CAAAA,QAAQ,CAACL,eAAe,CAACgB,eAAhB,CAAgCD,KAAhC,CAAD,CAAnB,EANT,EAOD,CAVkB,EAAnB,CAYA,GAAME,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,SAAM,UAACZ,QAAD,CAAc,CACxCA,QAAQ,CAACL,eAAe,CAACkB,oBAAhB,EAAD,CAAR,CACAjB,KAAK,CACFkB,GADH,CACO,gCADP,EAEGX,IAFH,CAEQ,kBAAGK,CAAAA,IAAH,MAAGA,IAAH,OAAcR,CAAAA,QAAQ,CAACL,eAAe,CAACoB,oBAAhB,CAAqCP,IAArC,CAAD,CAAtB,EAFR,EAGGC,KAHH,CAGS,SAACC,KAAD,QAAWV,CAAAA,QAAQ,CAACL,eAAe,CAACqB,kBAAhB,CAAmCN,KAAnC,CAAD,CAAnB,EAHT,EAID,CANqB,EAAtB,CAQA,GAAMO,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,EAAD,QAAQ,UAAClB,QAAD,CAAc,CAC1CA,QAAQ,CAACL,eAAe,CAACwB,oBAAhB,EAAD,CAAR,CACAvB,KAAK,CACFwB,MADH,0CAC4CF,EAD5C,GAEGf,IAFH,CAEQ,iBAAMH,CAAAA,QAAQ,CAACL,eAAe,CAAC0B,oBAAhB,CAAqCH,EAArC,CAAD,CAAd,EAFR,EAGGT,KAHH,CAGS,SAACC,KAAD,QAAWV,CAAAA,QAAQ,CAACL,eAAe,CAAC2B,kBAAhB,CAAmCZ,KAAnC,CAAD,CAAnB,EAHT,EAID,CANqB,EAAtB,CAOA,cAAe,CACbb,UAAU,CAAVA,UADa,CAEbe,aAAa,CAAbA,aAFa,CAGbK,aAAa,CAAbA,aAHa,CAAf","sourcesContent":["import contactsActions from \"../contact/contact-actions\";\nimport axios from \"axios\";\n\nconst addContact = (name, number) => (dispatch) => {\n  dispatch(contactsActions.addContactRequest());\n  //fetch(\"http://localhost:2000/contacts\");\n  axios\n    .post(\"http://localhost:2000/contacts\", { name, number })\n    .then((response) => {\n      console.log(response);\n      dispatch(contactsActions.addContactSuccess(response.data));\n    })\n    .catch((error) => dispatch(contactsActions.addContactError(error)));\n};\n\nconst fetchContacts = () => (dispatch) => {\n  dispatch(contactsActions.fetchContactsRequest());\n  axios\n    .get(\"http://localhost:2000/contacts\")\n    .then(({ data }) => dispatch(contactsActions.fetchContactsSuccess(data)))\n    .catch((error) => dispatch(contactsActions.fetchContactsError(error)));\n};\n\nconst removeContact = (id) => (dispatch) => {\n  dispatch(contactsActions.removeContactRequest());\n  axios\n    .delete(`http://localhost:2000/contacts/${id}`)\n    .then(() => dispatch(contactsActions.removeContactSuccess(id)))\n    .catch((error) => dispatch(contactsActions.removeContactError(error)));\n};\nexport default {\n  addContact,\n  fetchContacts,\n  removeContact,\n};\n"]},"metadata":{},"sourceType":"module"}