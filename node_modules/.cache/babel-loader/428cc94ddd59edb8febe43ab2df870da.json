{"ast":null,"code":"import React from\"react\";import ContactsListItems from\"../contactListItems/ContactsListItems\";import{CSSTransition,TransitionGroup}from\"react-transition-group\";import{connect}from\"react-redux\";import contactSelectors from\"../../redux/contact/contact-selectors\";//import contactActions from \"../../redux/contact/contact-actions\";\nvar ContactsList=function ContactsList(_ref){var items=_ref.items,contacts=_ref.contacts;// render() {\n//   const { contacts, deleteContact } = this.props;\nreturn/*#__PURE__*/React.createElement(\"div\",{style:{display:\"flex\",justifyContent:\"center\"}},contacts.length>0&&items.length===0?/*#__PURE__*/React.createElement(\"h4\",null,\"...Nothing Found\"):/*#__PURE__*/React.createElement(TransitionGroup,{component:\"ul\",className:\"contacts-list\"},items.map(function(_ref2){var id=_ref2.id;return/*#__PURE__*/React.createElement(CSSTransition,{key:id,classNames:\"taskList-fade\",timeout:250,unmountOnExit:true},/*#__PURE__*/React.createElement(ContactsListItems// contact={contact}\n// key={id}\n,{id:id//deleteContact={() => deleteContact(id)}\n}));})));};var mapStateToProps=function mapStateToProps(state){var getFilteredContact=contactSelectors.getContactsFiltered(state);// const { items, filter } = state.contacts;\n// const normalizedFilter = filter.toLowerCase();\n// const getFilteredContact = items.filter((contact) =>\n//   contact.name.toLowerCase().includes(normalizedFilter)\n// );\n// console.log(\"getFilteredContact\", getFilteredContact);\nconsole.log(\"items\",getFilteredContact);return{items:getFilteredContact,contacts:contactSelectors.getContacts(state)};};export default connect(mapStateToProps)(ContactsList);","map":{"version":3,"sources":["/Users/anastasia/Documents/React-BC-22/goit-react-hw-07-phonebook/src/components/contactsList/ContactsList.js"],"names":["React","ContactsListItems","CSSTransition","TransitionGroup","connect","contactSelectors","ContactsList","items","contacts","display","justifyContent","length","map","id","mapStateToProps","state","getFilteredContact","getContactsFiltered","console","log","getContacts"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,uCAA9B,CACA,OAASC,aAAT,CAAwBC,eAAxB,KAA+C,wBAA/C,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,uCAA7B,CACA;AAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAIf,IAHJC,CAAAA,KAGI,MAHJA,KAGI,CAFJC,QAEI,MAFJA,QAEI,CACJ;AACA;AACA,mBACE,2BAAK,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAX,CAAmBC,cAAc,CAAE,QAAnC,CAAZ,EACGF,QAAQ,CAACG,MAAT,CAAkB,CAAlB,EAAuBJ,KAAK,CAACI,MAAN,GAAiB,CAAxC,cACC,iDADD,cAGC,oBAAC,eAAD,EAAiB,SAAS,CAAC,IAA3B,CAAgC,SAAS,CAAC,eAA1C,EACGJ,KAAK,CAACK,GAAN,CAAU,mBAAGC,CAAAA,EAAH,OAAGA,EAAH,oBACT,oBAAC,aAAD,EACE,GAAG,CAAEA,EADP,CAEE,UAAU,CAAC,eAFb,CAGE,OAAO,CAAE,GAHX,CAIE,aAAa,KAJf,eAME,oBAAC,iBACC;AACA;AAFF,EAGE,EAAE,CAAEA,EACJ;AAJF,EANF,CADS,EAAV,CADH,CAJJ,CADF,CAyBD,CAhCD,CAkCA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACjC,GAAMC,CAAAA,kBAAkB,CAAGX,gBAAgB,CAACY,mBAAjB,CAAqCF,KAArC,CAA3B,CACA;AACA;AAEA;AACA;AACA;AACA;AACAG,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAqBH,kBAArB,EACA,MAAO,CACLT,KAAK,CAAES,kBADF,CAELR,QAAQ,CAAEH,gBAAgB,CAACe,WAAjB,CAA6BL,KAA7B,CAFL,CAAP,CAID,CAdD,CAgBA,cAAeX,CAAAA,OAAO,CAACU,eAAD,CAAP,CAAyBR,YAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport ContactsListItems from \"../contactListItems/ContactsListItems\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport contactSelectors from \"../../redux/contact/contact-selectors\";\n//import contactActions from \"../../redux/contact/contact-actions\";\n\nconst ContactsList = ({\n  items,\n  contacts,\n  // deleteContact\n}) => {\n  // render() {\n  //   const { contacts, deleteContact } = this.props;\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n      {contacts.length > 0 && items.length === 0 ? (\n        <h4>...Nothing Found</h4>\n      ) : (\n        <TransitionGroup component=\"ul\" className=\"contacts-list\">\n          {items.map(({ id }) => (\n            <CSSTransition\n              key={id}\n              classNames=\"taskList-fade\"\n              timeout={250}\n              unmountOnExit\n            >\n              <ContactsListItems\n                // contact={contact}\n                // key={id}\n                id={id}\n                //deleteContact={() => deleteContact(id)}\n              />\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const getFilteredContact = contactSelectors.getContactsFiltered(state);\n  // const { items, filter } = state.contacts;\n  // const normalizedFilter = filter.toLowerCase();\n\n  // const getFilteredContact = items.filter((contact) =>\n  //   contact.name.toLowerCase().includes(normalizedFilter)\n  // );\n  // console.log(\"getFilteredContact\", getFilteredContact);\n  console.log(\"items\", getFilteredContact);\n  return {\n    items: getFilteredContact,\n    contacts: contactSelectors.getContacts(state),\n  };\n};\n\nexport default connect(mapStateToProps)(ContactsList);\n"]},"metadata":{},"sourceType":"module"}