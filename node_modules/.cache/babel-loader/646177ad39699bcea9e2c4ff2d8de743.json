{"ast":null,"code":"import React from\"react\";import ContactsListItems from\"../contactListItems/ContactsListItems\";import{CSSTransition,TransitionGroup}from\"react-transition-group\";import{connect}from\"react-redux\";//import contactActions from \"../../redux/contact/contact-actions\";\nvar ContactsList=function ContactsList(_ref){var contacts=_ref.contacts;// render() {\n//   const { contacts, deleteContact } = this.props;\nreturn/*#__PURE__*/React.createElement(TransitionGroup,{component:\"ul\",className:\"contacts-list\"},contacts.map(function(_ref2){var id=_ref2.id;return/*#__PURE__*/React.createElement(CSSTransition,{key:id,classNames:\"taskList-fade\",timeout:250,unmountOnExit:true},/*#__PURE__*/React.createElement(ContactsListItems// contact={contact}\n// key={id}\n,{id:id//deleteContact={() => deleteContact(id)}\n}));}));//  }\n};var mapStateToProps=function mapStateToProps(state){var _state$contacts=state.contacts,items=_state$contacts.items,filter=_state$contacts.filter;var normalizedFilter=filter.toLowerCase();var getFilteredContact=items.filter(function(contact){return contact.name.toLowerCase().includes(normalizedFilter);});console.log(\"getFilteredContact\",getFilteredContact);return{contacts:getFilteredContact};};// const getFilteredContacts = (state) => {\n//   const { items, filter } = state.contacts;\n//   const getfilteredContacts = items.filter((contact) =>\n//     contact.name.toLowerCase().includes(filter.toLowerCase())\n//   );\n//   return {\n//     contacts: getfilteredContacts,\n//   };\n// };\n// const mapStateToProps = ({ contacts: { items, filter } }) => ({\n//   contacts: getFilteredContacts(items, filter),\n// });\n// const mapDispatchToProps = {\n//   deleteContact: contactActions.deleteContact,\n// };\n// export default connect(\n//   mapStateToProps\n//   //  mapDispatchToProps\n// )(ContactsList);\n// //export default ContactsList;\nexport default connect(mapStateToProps)(ContactsList);","map":{"version":3,"sources":["/Users/anastasia/Documents/React-BC-22/goit-react-hw-06-phonebook/src/components/contactsList/ContactsList.js"],"names":["React","ContactsListItems","CSSTransition","TransitionGroup","connect","ContactsList","contacts","map","id","mapStateToProps","state","items","filter","normalizedFilter","toLowerCase","getFilteredContact","contact","name","includes","console","log"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,uCAA9B,CACA,OAASC,aAAT,CAAwBC,eAAxB,KAA+C,wBAA/C,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA;AAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAGf,IAFJC,CAAAA,QAEI,MAFJA,QAEI,CACJ;AACA;AACA,mBACE,oBAAC,eAAD,EAAiB,SAAS,CAAC,IAA3B,CAAgC,SAAS,CAAC,eAA1C,EACGA,QAAQ,CAACC,GAAT,CAAa,mBAAGC,CAAAA,EAAH,OAAGA,EAAH,oBACZ,oBAAC,aAAD,EACE,GAAG,CAAEA,EADP,CAEE,UAAU,CAAC,eAFb,CAGE,OAAO,CAAE,GAHX,CAIE,aAAa,KAJf,eAME,oBAAC,iBACC;AACA;AAFF,EAGE,EAAE,CAAEA,EACJ;AAJF,EANF,CADY,EAAb,CADH,CADF,CAmBA;AACD,CA1BD,CA4BA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,qBACPA,KAAK,CAACJ,QADC,CACzBK,KADyB,iBACzBA,KADyB,CAClBC,MADkB,iBAClBA,MADkB,CAEjC,GAAMC,CAAAA,gBAAgB,CAAGD,MAAM,CAACE,WAAP,EAAzB,CAEA,GAAMC,CAAAA,kBAAkB,CAAGJ,KAAK,CAACC,MAAN,CAAa,SAACI,OAAD,QACtCA,CAAAA,OAAO,CAACC,IAAR,CAAaH,WAAb,GAA2BI,QAA3B,CAAoCL,gBAApC,CADsC,EAAb,CAA3B,CAGAM,OAAO,CAACC,GAAR,CAAY,oBAAZ,CAAkCL,kBAAlC,EACA,MAAO,CACLT,QAAQ,CAAES,kBADL,CAAP,CAGD,CAXD,CAYA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAeX,CAAAA,OAAO,CAACK,eAAD,CAAP,CAAyBJ,YAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport ContactsListItems from \"../contactListItems/ContactsListItems\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\n//import contactActions from \"../../redux/contact/contact-actions\";\n\nconst ContactsList = ({\n  contacts,\n  // deleteContact\n}) => {\n  // render() {\n  //   const { contacts, deleteContact } = this.props;\n  return (\n    <TransitionGroup component=\"ul\" className=\"contacts-list\">\n      {contacts.map(({ id }) => (\n        <CSSTransition\n          key={id}\n          classNames=\"taskList-fade\"\n          timeout={250}\n          unmountOnExit\n        >\n          <ContactsListItems\n            // contact={contact}\n            // key={id}\n            id={id}\n            //deleteContact={() => deleteContact(id)}\n          />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n  //  }\n};\n\nconst mapStateToProps = (state) => {\n  const { items, filter } = state.contacts;\n  const normalizedFilter = filter.toLowerCase();\n\n  const getFilteredContact = items.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n  console.log(\"getFilteredContact\", getFilteredContact);\n  return {\n    contacts: getFilteredContact,\n  };\n};\n// const getFilteredContacts = (state) => {\n//   const { items, filter } = state.contacts;\n\n//   const getfilteredContacts = items.filter((contact) =>\n//     contact.name.toLowerCase().includes(filter.toLowerCase())\n//   );\n//   return {\n//     contacts: getfilteredContacts,\n//   };\n// };\n// const mapStateToProps = ({ contacts: { items, filter } }) => ({\n//   contacts: getFilteredContacts(items, filter),\n// });\n// const mapDispatchToProps = {\n//   deleteContact: contactActions.deleteContact,\n// };\n// export default connect(\n//   mapStateToProps\n//   //  mapDispatchToProps\n// )(ContactsList);\n// //export default ContactsList;\nexport default connect(mapStateToProps)(ContactsList);\n"]},"metadata":{},"sourceType":"module"}