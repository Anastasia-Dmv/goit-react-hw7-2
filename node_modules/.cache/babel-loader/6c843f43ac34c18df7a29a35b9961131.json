{"ast":null,"code":"var _jsxFileName = \"/Users/anastasia/Documents/React-BC-22/goit-react-hw-06-phonebook/src/components/app/App.js\";\nimport React, { Component } from \"react\"; //import { v4 as uuidv4 } from \"uuid\";\n\nimport { connect } from \"react-redux\";\nimport Loader from \"react-loader-spinner\"; //import contactsActions from \"../../redux/contact/contact-actions\";\n\nimport MainTitle from \"../mainTitle/MainTitle\";\nimport ContactForm from \"../contactForm/ContactForm\";\nimport FindContactInput from \"../findContactInput/FindContactInput\";\nimport ContactsList from \"../contactsList/ContactsList\";\nimport { CSSTransition } from \"react-transition-group\";\nimport contactsOperation from \"../contactsOperations/contactsOperation\"; //import contactActions from \"../../redux/contact/contact-actions\";\n//import { items } from \"../../redux/contact/contact-reducer\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // contacts: [\n      //   { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      //   { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      //   { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      //   { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n      // ],\n      // filter: \"\",\n      showContacts: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.onFetchContacts();\n  } // componentDidMount() {\n  //   const persistedContacts = localStorage.getItem(\"contacts\");\n  //   if (persistedContacts) {\n  //     console.log(\"persistedContacts\", persistedContacts);\n  //     this.props.saveInStorage(JSON.parse(persistedContacts));\n  //   }\n  // }\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (prevProps.contacts !== this.props.contacts) {\n  //     console.log(\"this.props.contacts\", this.props.contacts);\n  //     localStorage.setItem(\"contacts\", JSON.stringify(this.props.contacts));\n  //   }\n  // }\n  // addContact = (name, number) => {\n  //   const contact = {\n  //     name: name,\n  //     number: number,\n  //     id: uuidv4(),\n  //   };\n  //   this.setState((prevState) => {\n  //     return {\n  //       contacts: [...prevState.contacts, contact],\n  //       showContacts: true,\n  //     };\n  //   });\n  // };\n  // changeFilter = (filter) => {\n  //   this.setState({ filter });\n  // };\n  // getFilteredContacts = () => {\n  //   const { contacts, filter } = this.state;\n  //   return contacts.filter((contact) =>\n  //     contact.name.toLowerCase().includes(filter.toLowerCase())\n  //   );\n  // };\n  // handleDelete = (id) => {\n  //   this.setState((prevState) => ({\n  //     contacts: prevState.contacts.filter((contact) => contact.id !== id),\n  //   }));\n  // };\n\n\n  render() {\n    //const { filter, contacts } = this.state;\n    //const filteredContacts = this.getFilteredContacts();\n    // const { IsLoadingContacts } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CSSTransition, {\n      in: true,\n      appear: true,\n      classNames: \"mainTitle-slideIn\",\n      timeout: 5000,\n      unmountOnExit: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MainTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    })), this.props.IsLoadingContacts && /*#__PURE__*/React.createElement(Loader, {\n      type: \"ThreeDots\",\n      color: \"#00BFFF\",\n      height: 80,\n      width: 80,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ContactForm // addContact={this.addContact}\n    // contacts={this.state.contacts}\n    , {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CSSTransition, {\n      in: this.props.filteredContacts.length >= 1,\n      timeout: 250,\n      classNames: \"findContact\",\n      unmountOnExit: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FindContactInput // value={this.props.filter}\n    // onChangeFilter={this.changeFilter}\n    , {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(ContactsList // deleteContact={this.handleDelete} contacts={contacts}\n    , {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(\"state\", state);\n  const {\n    items,\n    filter\n  } = state.contacts;\n  const getfilteredContacts = items.filter(contact => contact.item.toLowerCase().includes(filter.toLowerCase()));\n  return {\n    filteredContacts: getfilteredContacts,\n    IsLoadingContacts: state.contacts.loading,\n    filter: state.contacts.filter\n  };\n};\n\nconst mapDispatchToProps = {\n  onFetchContacts: contactsOperation.fetchContacts\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App); //export default App;","map":{"version":3,"sources":["/Users/anastasia/Documents/React-BC-22/goit-react-hw-06-phonebook/src/components/app/App.js"],"names":["React","Component","connect","Loader","MainTitle","ContactForm","FindContactInput","ContactsList","CSSTransition","contactsOperation","App","state","showContacts","componentDidMount","props","onFetchContacts","render","IsLoadingContacts","filteredContacts","length","mapStateToProps","console","log","items","filter","contacts","getfilteredContacts","contact","item","toLowerCase","includes","loading","mapDispatchToProps","fetchContacts"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CACA;;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,gBAAP,MAA6B,sCAA7B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,iBAAP,MAA8B,yCAA9B,C,CACA;AACA;;AAEA,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BU,KAD0B,GAClB;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,MAAAA,YAAY,EAAE;AARR,KADkB;AAAA;;AAW1BC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,eAAX;AACD,GAbyB,CAc1B;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAG;AACP;AAEA;AACA;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,aAAD;AACE,MAAA,EAAE,EAAE,IADN;AAEE,MAAA,MAAM,EAAE,IAFV;AAGE,MAAA,UAAU,EAAC,mBAHb;AAIE,MAAA,OAAO,EAAE,IAJX;AAKE,MAAA,aAAa,MALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF,EAUG,KAAKF,KAAL,CAAWG,iBAAX,iBACC,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,WAAb;AAAyB,MAAA,KAAK,EAAC,SAA/B;AAAyC,MAAA,MAAM,EAAE,EAAjD;AAAqD,MAAA,KAAK,EAAE,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,eAaE,oBAAC,WAAD,CACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,eAmBE,oBAAC,aAAD;AACE,MAAA,EAAE,EAAE,KAAKH,KAAL,CAAWI,gBAAX,CAA4BC,MAA5B,IAAsC,CAD5C;AAEE,MAAA,OAAO,EAAE,GAFX;AAGE,MAAA,UAAU,EAAC,aAHb;AAIE,MAAA,aAAa,MAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE,oBAAC,gBAAD,CACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CAnBF,eAoCE,oBAAC,YAAD,CACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApCF,CADF;AA4CD;;AA5GyB;;AA8G5B,MAAMC,eAAe,GAAIT,KAAD,IAAW;AACjCU,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBX,KAArB;AACA,QAAM;AAAEY,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAoBb,KAAK,CAACc,QAAhC;AAEA,QAAMC,mBAAmB,GAAGH,KAAK,CAACC,MAAN,CAAcG,OAAD,IACvCA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCN,MAAM,CAACK,WAAP,EAApC,CAD0B,CAA5B;AAGA,SAAO;AACLX,IAAAA,gBAAgB,EAAEQ,mBADb;AAELT,IAAAA,iBAAiB,EAAEN,KAAK,CAACc,QAAN,CAAeM,OAF7B;AAGLP,IAAAA,MAAM,EAAEb,KAAK,CAACc,QAAN,CAAeD;AAHlB,GAAP;AAKD,CAZD;;AAcA,MAAMQ,kBAAkB,GAAG;AACzBjB,EAAAA,eAAe,EAAEN,iBAAiB,CAACwB;AADV,CAA3B;AAGA,eAAe/B,OAAO,CAACkB,eAAD,EAAkBY,kBAAlB,CAAP,CAA6CtB,GAA7C,CAAf,C,CACA","sourcesContent":["import React, { Component } from \"react\";\n//import { v4 as uuidv4 } from \"uuid\";\nimport { connect } from \"react-redux\";\nimport Loader from \"react-loader-spinner\";\n//import contactsActions from \"../../redux/contact/contact-actions\";\n\nimport MainTitle from \"../mainTitle/MainTitle\";\nimport ContactForm from \"../contactForm/ContactForm\";\nimport FindContactInput from \"../findContactInput/FindContactInput\";\nimport ContactsList from \"../contactsList/ContactsList\";\nimport { CSSTransition } from \"react-transition-group\";\nimport contactsOperation from \"../contactsOperations/contactsOperation\";\n//import contactActions from \"../../redux/contact/contact-actions\";\n//import { items } from \"../../redux/contact/contact-reducer\";\n\nclass App extends Component {\n  state = {\n    // contacts: [\n    //   { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    //   { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    //   { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    //   { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    // ],\n    // filter: \"\",\n    showContacts: false,\n  };\n  componentDidMount() {\n    this.props.onFetchContacts();\n  }\n  // componentDidMount() {\n  //   const persistedContacts = localStorage.getItem(\"contacts\");\n  //   if (persistedContacts) {\n  //     console.log(\"persistedContacts\", persistedContacts);\n  //     this.props.saveInStorage(JSON.parse(persistedContacts));\n  //   }\n  // }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (prevProps.contacts !== this.props.contacts) {\n  //     console.log(\"this.props.contacts\", this.props.contacts);\n  //     localStorage.setItem(\"contacts\", JSON.stringify(this.props.contacts));\n  //   }\n  // }\n  // addContact = (name, number) => {\n  //   const contact = {\n  //     name: name,\n  //     number: number,\n  //     id: uuidv4(),\n  //   };\n\n  //   this.setState((prevState) => {\n  //     return {\n  //       contacts: [...prevState.contacts, contact],\n  //       showContacts: true,\n  //     };\n  //   });\n  // };\n  // changeFilter = (filter) => {\n  //   this.setState({ filter });\n  // };\n\n  // getFilteredContacts = () => {\n  //   const { contacts, filter } = this.state;\n\n  //   return contacts.filter((contact) =>\n  //     contact.name.toLowerCase().includes(filter.toLowerCase())\n  //   );\n  // };\n  // handleDelete = (id) => {\n  //   this.setState((prevState) => ({\n  //     contacts: prevState.contacts.filter((contact) => contact.id !== id),\n  //   }));\n  // };\n\n  render() {\n    //const { filter, contacts } = this.state;\n\n    //const filteredContacts = this.getFilteredContacts();\n    // const { IsLoadingContacts } = this.props;\n    return (\n      <div>\n        <CSSTransition\n          in={true}\n          appear={true}\n          classNames=\"mainTitle-slideIn\"\n          timeout={5000}\n          unmountOnExit\n        >\n          <MainTitle />\n        </CSSTransition>\n        {this.props.IsLoadingContacts && (\n          <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\n        )}\n        <ContactForm\n        // addContact={this.addContact}\n        // contacts={this.state.contacts}\n        />\n\n        {/* {this.props.filteredContacts && ( */}\n        <CSSTransition\n          in={this.props.filteredContacts.length >= 1}\n          timeout={250}\n          classNames=\"findContact\"\n          unmountOnExit\n        >\n          {/* {this.props.filteredContacts.length > 0 && ( */}\n          <FindContactInput\n          // value={this.props.filter}\n          // onChangeFilter={this.changeFilter}\n          />\n          {/* )} */}\n        </CSSTransition>\n        {/* )} */}\n        {/* <CSSTransition in={showContacts} inmountOnExit> */}\n        {/* {this.state.contacts && ( */}\n\n        <ContactsList\n        // deleteContact={this.handleDelete} contacts={contacts}\n        />\n        {/* )} */}\n        {/* </CSSTransition> */}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  console.log(\"state\", state);\n  const { items, filter } = state.contacts;\n\n  const getfilteredContacts = items.filter((contact) =>\n    contact.item.toLowerCase().includes(filter.toLowerCase())\n  );\n  return {\n    filteredContacts: getfilteredContacts,\n    IsLoadingContacts: state.contacts.loading,\n    filter: state.contacts.filter,\n  };\n};\n\nconst mapDispatchToProps = {\n  onFetchContacts: contactsOperation.fetchContacts,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n//export default App;\n"]},"metadata":{},"sourceType":"module"}