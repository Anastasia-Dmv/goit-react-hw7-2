{"ast":null,"code":"import _classCallCheck from\"/Users/anastasia/Documents/React-BC-22/goit-react-hw-06-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/anastasia/Documents/React-BC-22/goit-react-hw-06-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/anastasia/Documents/React-BC-22/goit-react-hw-06-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/anastasia/Documents/React-BC-22/goit-react-hw-06-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";//import { v4 as uuidv4 } from \"uuid\";\nimport{connect}from\"react-redux\";//import contactsActions from \"../../redux/contact/contact-actions\";\nimport MainTitle from\"../mainTitle/MainTitle\";import ContactForm from\"../contactForm/ContactForm\";import FindContactInput from\"../findContactInput/FindContactInput\";import ContactsList from\"../contactsList/ContactsList\";import{CSSTransition}from\"react-transition-group\";import contactActions from\"../../redux/contact/contact-actions\";//import { items } from \"../../redux/contact/contact-reducer\";\nvar App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={// contacts: [\n//   { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n//   { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n//   { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n//   { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n// ],\n// filter: \"\",\nshowContacts:false};return _this;}_createClass(App,[{key:\"render\",// componentDidMount() {\n//   const persistedContacts = localStorage.getItem(\"contacts\");\n//   if (persistedContacts) {\n//     console.log(\"persistedContacts\", persistedContacts);\n//     this.props.saveInStorage(JSON.parse(persistedContacts));\n//   }\n// }\n// componentDidUpdate(prevProps, prevState) {\n//   if (prevProps.contacts !== this.props.contacts) {\n//     console.log(\"this.props.contacts\", this.props.contacts);\n//     localStorage.setItem(\"contacts\", JSON.stringify(this.props.contacts));\n//   }\n// }\n// addContact = (name, number) => {\n//   const contact = {\n//     name: name,\n//     number: number,\n//     id: uuidv4(),\n//   };\n//   this.setState((prevState) => {\n//     return {\n//       contacts: [...prevState.contacts, contact],\n//       showContacts: true,\n//     };\n//   });\n// };\n// changeFilter = (filter) => {\n//   this.setState({ filter });\n// };\n// getFilteredContacts = () => {\n//   const { contacts, filter } = this.state;\n//   return contacts.filter((contact) =>\n//     contact.name.toLowerCase().includes(filter.toLowerCase())\n//   );\n// };\n// handleDelete = (id) => {\n//   this.setState((prevState) => ({\n//     contacts: prevState.contacts.filter((contact) => contact.id !== id),\n//   }));\n// };\nvalue:function render(){//const { filter, contacts } = this.state;\n//const filteredContacts = this.getFilteredContacts();\nreturn/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(CSSTransition,{in:true,appear:true,classNames:\"mainTitle-slideIn\",timeout:5000,unmountOnExit:true},/*#__PURE__*/React.createElement(MainTitle,null)),/*#__PURE__*/React.createElement(ContactForm// addContact={this.addContact}\n// contacts={this.state.contacts}\n,null),/*#__PURE__*/React.createElement(CSSTransition,{in:this.props.filteredContacts.length>=1,timeout:250,classNames:\"findContact\",unmountOnExit:true},/*#__PURE__*/React.createElement(FindContactInput,{value:this.props.filter,onChangeFilter:this.changeFilter})),/*#__PURE__*/React.createElement(ContactsList// deleteContact={this.handleDelete} contacts={contacts}\n,null));}}]);return App;}(Component);// const mapStateToProps = (state) => {\n//   const { items, filter } = state.contacts;\n//   const getfilteredContacts = items.filter((contact) =>\n//     contact.name.toLowerCase().includes(filter.toLowerCase())\n//   );\n//   return {\n//     filteredContacts: getfilteredContacts,\n//     filter: state.contacts.filter,\n//   };\n// };\nvar mapDispatchToProps={onChangeFilter:contactActions.changeFilter};//const mapDispatchToProps = {};\nexport default connect(null,mapDispatchToProps)(App);//export default App;","map":{"version":3,"sources":["/Users/anastasia/Documents/React-BC-22/goit-react-hw-06-phonebook/src/components/app/App.js"],"names":["React","Component","connect","MainTitle","ContactForm","FindContactInput","ContactsList","CSSTransition","contactActions","App","state","showContacts","props","filteredContacts","length","filter","changeFilter","mapDispatchToProps","onChangeFilter"],"mappings":"gtBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA;AACA,OAASC,OAAT,KAAwB,aAAxB,CACA;AAEA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,MAAOC,CAAAA,WAAP,KAAwB,4BAAxB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,sCAA7B,CACA,MAAOC,CAAAA,YAAP,KAAyB,8BAAzB,CACA,OAASC,aAAT,KAA8B,wBAA9B,CACA,MAAOC,CAAAA,cAAP,KAA2B,qCAA3B,CACA;GAEMC,CAAAA,G,+SACJC,K,CAAQ,CACN;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,YAAY,CAAE,KARR,C,+CAWR;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;uBAES,CACP;AAEA;AACA,mBACE,4CACE,oBAAC,aAAD,EACE,EAAE,CAAE,IADN,CAEE,MAAM,CAAE,IAFV,CAGE,UAAU,CAAC,mBAHb,CAIE,OAAO,CAAE,IAJX,CAKE,aAAa,KALf,eAOE,oBAAC,SAAD,MAPF,CADF,cAWE,oBAAC,WACD;AACA;AAFA,MAXF,cAgBE,oBAAC,aAAD,EACE,EAAE,CAAE,KAAKC,KAAL,CAAWC,gBAAX,CAA4BC,MAA5B,EAAsC,CAD5C,CAEE,OAAO,CAAE,GAFX,CAGE,UAAU,CAAC,aAHb,CAIE,aAAa,KAJf,eAOE,oBAAC,gBAAD,EACE,KAAK,CAAE,KAAKF,KAAL,CAAWG,MADpB,CAEE,cAAc,CAAE,KAAKC,YAFvB,EAPF,CAhBF,cAgCE,oBAAC,YACD;AADA,MAhCF,CADF,CAwCD,C,iBArGef,S,EAuGlB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAMgB,CAAAA,kBAAkB,CAAG,CACzBC,cAAc,CAAEV,cAAc,CAACQ,YADN,CAA3B,CAGA;AACA,cAAed,CAAAA,OAAO,CAAC,IAAD,CAAOe,kBAAP,CAAP,CAAkCR,GAAlC,CAAf,CACA","sourcesContent":["import React, { Component } from \"react\";\n//import { v4 as uuidv4 } from \"uuid\";\nimport { connect } from \"react-redux\";\n//import contactsActions from \"../../redux/contact/contact-actions\";\n\nimport MainTitle from \"../mainTitle/MainTitle\";\nimport ContactForm from \"../contactForm/ContactForm\";\nimport FindContactInput from \"../findContactInput/FindContactInput\";\nimport ContactsList from \"../contactsList/ContactsList\";\nimport { CSSTransition } from \"react-transition-group\";\nimport contactActions from \"../../redux/contact/contact-actions\";\n//import { items } from \"../../redux/contact/contact-reducer\";\n\nclass App extends Component {\n  state = {\n    // contacts: [\n    //   { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    //   { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    //   { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    //   { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    // ],\n    // filter: \"\",\n    showContacts: false,\n  };\n\n  // componentDidMount() {\n  //   const persistedContacts = localStorage.getItem(\"contacts\");\n  //   if (persistedContacts) {\n  //     console.log(\"persistedContacts\", persistedContacts);\n  //     this.props.saveInStorage(JSON.parse(persistedContacts));\n  //   }\n  // }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (prevProps.contacts !== this.props.contacts) {\n  //     console.log(\"this.props.contacts\", this.props.contacts);\n  //     localStorage.setItem(\"contacts\", JSON.stringify(this.props.contacts));\n  //   }\n  // }\n  // addContact = (name, number) => {\n  //   const contact = {\n  //     name: name,\n  //     number: number,\n  //     id: uuidv4(),\n  //   };\n\n  //   this.setState((prevState) => {\n  //     return {\n  //       contacts: [...prevState.contacts, contact],\n  //       showContacts: true,\n  //     };\n  //   });\n  // };\n  // changeFilter = (filter) => {\n  //   this.setState({ filter });\n  // };\n\n  // getFilteredContacts = () => {\n  //   const { contacts, filter } = this.state;\n\n  //   return contacts.filter((contact) =>\n  //     contact.name.toLowerCase().includes(filter.toLowerCase())\n  //   );\n  // };\n  // handleDelete = (id) => {\n  //   this.setState((prevState) => ({\n  //     contacts: prevState.contacts.filter((contact) => contact.id !== id),\n  //   }));\n  // };\n\n  render() {\n    //const { filter, contacts } = this.state;\n\n    //const filteredContacts = this.getFilteredContacts();\n    return (\n      <div>\n        <CSSTransition\n          in={true}\n          appear={true}\n          classNames=\"mainTitle-slideIn\"\n          timeout={5000}\n          unmountOnExit\n        >\n          <MainTitle />\n        </CSSTransition>\n\n        <ContactForm\n        // addContact={this.addContact}\n        // contacts={this.state.contacts}\n        />\n        {/* {this.props.filteredContacts && ( */}\n        <CSSTransition\n          in={this.props.filteredContacts.length >= 1}\n          timeout={250}\n          classNames=\"findContact\"\n          unmountOnExit\n        >\n          {/* {this.props.filteredContacts.length > 0 && ( */}\n          <FindContactInput\n            value={this.props.filter}\n            onChangeFilter={this.changeFilter}\n          />\n          {/* )} */}\n        </CSSTransition>\n        {/* )} */}\n        {/* <CSSTransition in={showContacts} inmountOnExit> */}\n        {/* {this.state.contacts && ( */}\n        <ContactsList\n        // deleteContact={this.handleDelete} contacts={contacts}\n        />\n        {/* )} */}\n        {/* </CSSTransition> */}\n      </div>\n    );\n  }\n}\n// const mapStateToProps = (state) => {\n//   const { items, filter } = state.contacts;\n\n//   const getfilteredContacts = items.filter((contact) =>\n//     contact.name.toLowerCase().includes(filter.toLowerCase())\n//   );\n//   return {\n//     filteredContacts: getfilteredContacts,\n//     filter: state.contacts.filter,\n//   };\n// };\nconst mapDispatchToProps = {\n  onChangeFilter: contactActions.changeFilter,\n};\n//const mapDispatchToProps = {};\nexport default connect(null, mapDispatchToProps)(App);\n//export default App;\n"]},"metadata":{},"sourceType":"module"}