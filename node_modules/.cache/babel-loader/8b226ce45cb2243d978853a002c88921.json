{"ast":null,"code":"import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getLoading = state => state.contacts.loading;\n\nconst getFilter = state => state.contacts.filter;\n\nconst getContacts = state => state.contacts.items; // const getContactById = createSelector([getContacts], (contacts, contactId) => {\n//   return contacts.find((contact) => contact.id === contactId);\n// });\n\n\nconst getContactsFiltered = createSelector([getContacts, getFilter], (contacts, filter) => {\n  return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n});\n\nconst getContactById = (state, contactId) => {\n  const contacts = getContacts(state);\n  return contacts.find(contact => contact.id === contactId);\n}; // const getContactsFiltered = (state) => {\n//   const contacts = getContacts(state);\n//   const normalizedFilter = getFilter(state).toLowerCase();\n//   return contacts.filter((contact) =>\n//     contact.name.toLowerCase().includes(normalizedFilter)\n//   );\n// };\n\n\nexport default {\n  getLoading,\n  getFilter,\n  getContacts,\n  getContactById,\n  //getContactsFiltered,\n  getContactsFiltered //getContactByIdSl\n\n};","map":{"version":3,"sources":["/Users/anastasia/Documents/React-BC-22/goit-react-hw-06-phonebook/src/redux/contact/contact-selectors.js"],"names":["createSelector","getLoading","state","contacts","loading","getFilter","filter","getContacts","items","getContactsFiltered","contact","name","toLowerCase","includes","getContactById","contactId","find","id"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeC,OAA7C;;AACA,MAAMC,SAAS,GAAIH,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeG,MAA5C;;AACA,MAAMC,WAAW,GAAIL,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeK,KAA9C,C,CAEA;AACA;AACA;;;AAEA,MAAMC,mBAAmB,GAAGT,cAAc,CACxC,CAACO,WAAD,EAAcF,SAAd,CADwC,EAExC,CAACF,QAAD,EAAWG,MAAX,KAAsB;AACpB,SAAOH,QAAQ,CAACG,MAAT,CAAiBI,OAAD,IACrBA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCP,MAAM,CAACM,WAAP,EAApC,CADK,CAAP;AAGD,CANuC,CAA1C;;AAQA,MAAME,cAAc,GAAG,CAACZ,KAAD,EAAQa,SAAR,KAAsB;AAC3C,QAAMZ,QAAQ,GAAGI,WAAW,CAACL,KAAD,CAA5B;AACA,SAAOC,QAAQ,CAACa,IAAT,CAAeN,OAAD,IAAaA,OAAO,CAACO,EAAR,KAAeF,SAA1C,CAAP;AACD,CAHD,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAe;AACbd,EAAAA,UADa;AAEbI,EAAAA,SAFa;AAGbE,EAAAA,WAHa;AAIbO,EAAAA,cAJa;AAKb;AACAL,EAAAA,mBANa,CAQb;;AARa,CAAf","sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getLoading = (state) => state.contacts.loading;\nconst getFilter = (state) => state.contacts.filter;\nconst getContacts = (state) => state.contacts.items;\n\n// const getContactById = createSelector([getContacts], (contacts, contactId) => {\n//   return contacts.find((contact) => contact.id === contactId);\n// });\n\nconst getContactsFiltered = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\nconst getContactById = (state, contactId) => {\n  const contacts = getContacts(state);\n  return contacts.find((contact) => contact.id === contactId);\n};\n// const getContactsFiltered = (state) => {\n//   const contacts = getContacts(state);\n//   const normalizedFilter = getFilter(state).toLowerCase();\n//   return contacts.filter((contact) =>\n//     contact.name.toLowerCase().includes(normalizedFilter)\n//   );\n// };\nexport default {\n  getLoading,\n  getFilter,\n  getContacts,\n  getContactById,\n  //getContactsFiltered,\n  getContactsFiltered,\n\n  //getContactByIdSl\n};\n"]},"metadata":{},"sourceType":"module"}