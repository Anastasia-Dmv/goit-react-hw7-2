{"ast":null,"code":"//import actionTypes from \"./contact-types\";\n//import { v4 as uuidv4 } from \"uuid\";\nimport { createAction } from \"@reduxjs/toolkit\";\nconst addContactRequest = createAction(\"contacts/addRequest\");\nconst addContactSuccess = createAction(\"contacts/addSuccess\");\nconst addContactError = createAction(\"contacts/addError\");\nconst removeContactRequest = createAction(\"contacts/removeRequest\");\nconst removeContactSuccess = createAction(\"contacts/removeSuccess\");\nconst removeContactError = createAction(\"contacts/aremoverror\");\nconst fetchContactsRequest = createAction(\"contactfetchRequest\");\nconst fetchContactsSuccess = createAction(\"contacts/fetchSuccess\");\nconst fetchContactsError = createAction(\"contacts/fetchError\"); // const addContact = createAction(\"contact/AddContact\", (name, number) => ({\n//   payload: {\n//     contact: {\n//       name: name,\n//       number: number,\n//       id: uuidv4(),\n//     },\n//   },\n// }));\n//const deleteContact = createAction(\"contact/Delete\");\n\nconst changeFilter = createAction(\"contact/changeFilter\"); //const saveInStorage = createAction(\"contact/saveInStorage\");\n\nexport default {\n  removeContactRequest,\n  removeContactSuccess,\n  removeContactError,\n  addContactError,\n  addContactSuccess,\n  addContactRequest,\n  //addContact,\n  //deleteContact,\n  changeFilter,\n  //saveInStorage,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError\n}; //=============without toolkit====\n// const addContact = (name, number) => ({\n//   type: actionTypes.ADDCONTACT,\n//   payload: {\n//     contact: {\n//       name: name,\n//       number: number,\n//       id: uuidv4(),\n//     },\n//   },\n// });\n// const deleteContact = (id) => ({\n//   type: actionTypes.DELETE_CONTACT,\n//   payload: {\n//     id,\n//   },\n// });\n// const changeFilter = (filter) => ({\n//   type: actionTypes.CHANGE_FILTER,\n//   payload: {\n//     filter,\n//   },\n// });","map":{"version":3,"sources":["/Users/anastasia/Documents/React-BC-22/goit-react-hw-06-phonebook/src/redux/contact/contact-actions.js"],"names":["createAction","addContactRequest","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","changeFilter"],"mappings":"AAAA;AACA;AACA,SAASA,YAAT,QAA6B,kBAA7B;AAEA,MAAMC,iBAAiB,GAAGD,YAAY,CAAC,qBAAD,CAAtC;AACA,MAAME,iBAAiB,GAAGF,YAAY,CAAC,qBAAD,CAAtC;AACA,MAAMG,eAAe,GAAGH,YAAY,CAAC,mBAAD,CAApC;AAEA,MAAMI,oBAAoB,GAAGJ,YAAY,CAAC,wBAAD,CAAzC;AACA,MAAMK,oBAAoB,GAAGL,YAAY,CAAC,wBAAD,CAAzC;AACA,MAAMM,kBAAkB,GAAGN,YAAY,CAAC,sBAAD,CAAvC;AAEA,MAAMO,oBAAoB,GAAGP,YAAY,CAAC,qBAAD,CAAzC;AACA,MAAMQ,oBAAoB,GAAGR,YAAY,CAAC,uBAAD,CAAzC;AACA,MAAMS,kBAAkB,GAAGT,YAAY,CAAC,qBAAD,CAAvC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMU,YAAY,GAAGV,YAAY,CAAC,sBAAD,CAAjC,C,CACA;;AACA,eAAe;AACbI,EAAAA,oBADa;AAEbC,EAAAA,oBAFa;AAGbC,EAAAA,kBAHa;AAKbH,EAAAA,eALa;AAMbD,EAAAA,iBANa;AAObD,EAAAA,iBAPa;AAQb;AACA;AACAS,EAAAA,YAVa;AAWb;AACAH,EAAAA,oBAZa;AAabC,EAAAA,oBAba;AAcbC,EAAAA;AAda,CAAf,C,CAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["//import actionTypes from \"./contact-types\";\n//import { v4 as uuidv4 } from \"uuid\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nconst addContactRequest = createAction(\"contacts/addRequest\");\nconst addContactSuccess = createAction(\"contacts/addSuccess\");\nconst addContactError = createAction(\"contacts/addError\");\n\nconst removeContactRequest = createAction(\"contacts/removeRequest\");\nconst removeContactSuccess = createAction(\"contacts/removeSuccess\");\nconst removeContactError = createAction(\"contacts/aremoverror\");\n\nconst fetchContactsRequest = createAction(\"contactfetchRequest\");\nconst fetchContactsSuccess = createAction(\"contacts/fetchSuccess\");\nconst fetchContactsError = createAction(\"contacts/fetchError\");\n\n// const addContact = createAction(\"contact/AddContact\", (name, number) => ({\n//   payload: {\n//     contact: {\n//       name: name,\n//       number: number,\n//       id: uuidv4(),\n//     },\n//   },\n// }));\n//const deleteContact = createAction(\"contact/Delete\");\nconst changeFilter = createAction(\"contact/changeFilter\");\n//const saveInStorage = createAction(\"contact/saveInStorage\");\nexport default {\n  removeContactRequest,\n  removeContactSuccess,\n  removeContactError,\n\n  addContactError,\n  addContactSuccess,\n  addContactRequest,\n  //addContact,\n  //deleteContact,\n  changeFilter,\n  //saveInStorage,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n};\n//=============without toolkit====\n// const addContact = (name, number) => ({\n//   type: actionTypes.ADDCONTACT,\n//   payload: {\n//     contact: {\n//       name: name,\n//       number: number,\n//       id: uuidv4(),\n//     },\n//   },\n// });\n// const deleteContact = (id) => ({\n//   type: actionTypes.DELETE_CONTACT,\n//   payload: {\n//     id,\n//   },\n// });\n\n// const changeFilter = (filter) => ({\n//   type: actionTypes.CHANGE_FILTER,\n//   payload: {\n//     filter,\n//   },\n// });\n"]},"metadata":{},"sourceType":"module"}