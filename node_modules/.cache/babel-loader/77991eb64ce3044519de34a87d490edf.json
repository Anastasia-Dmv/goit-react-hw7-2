{"ast":null,"code":"var _jsxFileName = \"/Users/anastasia/Documents/React-BC-22/goit-react-hw-06-phonebook/src/components/contactsList/ContactsList.js\";\nimport React from \"react\";\nimport ContactsListItems from \"../contactListItems/ContactsListItems\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport contactSelectors from \"../../redux/contact/contact-selectors\"; //import contactActions from \"../../redux/contact/contact-actions\";\n\nconst ContactsList = ({\n  items // deleteContact\n\n}) => {\n  // render() {\n  //   const { contacts, deleteContact } = this.props;\n  return /*#__PURE__*/React.createElement(TransitionGroup, {\n    component: \"ul\",\n    className: \"contacts-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, items.map(({\n    id\n  }) => /*#__PURE__*/React.createElement(CSSTransition, {\n    key: id,\n    classNames: \"taskList-fade\",\n    timeout: 250,\n    unmountOnExit: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ContactsListItems // contact={contact}\n  // key={id}\n  , {\n    id: id //deleteContact={() => deleteContact(id)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  })))); //  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const getFilteredContact = contactSelectors.getContactsFiltered(state, ownProps); // const { items, filter } = state.contacts;\n  // const normalizedFilter = filter.toLowerCase();\n  // const getFilteredContact = items.filter((contact) =>\n  //   contact.name.toLowerCase().includes(normalizedFilter)\n  // );\n  // console.log(\"getFilteredContact\", getFilteredContact);\n\n  return {\n    items: getFilteredContact\n  };\n}; // const getFilteredContacts = (state) => {\n//   const { items, filter } = state.contacts;\n//   const getfilteredContacts = items.filter((contact) =>\n//     contact.name.toLowerCase().includes(filter.toLowerCase())\n//   );\n//   return {\n//     contacts: getfilteredContacts,\n//   };\n// };\n// const mapStateToProps = ({ contacts: { items, filter } }) => ({\n//   contacts: getFilteredContacts(items, filter),\n// });\n// const mapDispatchToProps = {\n//   deleteContact: contactActions.deleteContact,\n// };\n// export default connect(\n//   mapStateToProps\n//   //  mapDispatchToProps\n// )(ContactsList);\n// //export default ContactsList;\n\n\nexport default connect(mapStateToProps)(ContactsList);","map":{"version":3,"sources":["/Users/anastasia/Documents/React-BC-22/goit-react-hw-06-phonebook/src/components/contactsList/ContactsList.js"],"names":["React","ContactsListItems","CSSTransition","TransitionGroup","connect","contactSelectors","ContactsList","items","map","id","mapStateToProps","state","ownProps","getFilteredContact","getContactsFiltered"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B,C,CACA;;AAEA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,KADoB,CAEpB;;AAFoB,CAAD,KAGf;AACJ;AACA;AACA,sBACE,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,IAA3B;AAAgC,IAAA,SAAS,EAAC,eAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,GAAN,CAAU,CAAC;AAAEC,IAAAA;AAAF,GAAD,kBACT,oBAAC,aAAD;AACE,IAAA,GAAG,EAAEA,EADP;AAEE,IAAA,UAAU,EAAC,eAFb;AAGE,IAAA,OAAO,EAAE,GAHX;AAIE,IAAA,aAAa,MAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,iBAAD,CACE;AACA;AAFF;AAGE,IAAA,EAAE,EAAEA,EAHN,CAIE;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADD,CADH,CADF,CAHI,CAsBJ;AACD,CA1BD;;AA4BA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,QAAMC,kBAAkB,GAAGR,gBAAgB,CAACS,mBAAjB,CACzBH,KADyB,EAEzBC,QAFyB,CAA3B,CAD2C,CAK3C;AACA;AAEA;AACA;AACA;AACA;;AACA,SAAO;AACLL,IAAAA,KAAK,EAAEM;AADF,GAAP;AAGD,CAfD,C,CAgBA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAeT,OAAO,CAACM,eAAD,CAAP,CAAyBJ,YAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport ContactsListItems from \"../contactListItems/ContactsListItems\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport contactSelectors from \"../../redux/contact/contact-selectors\";\n//import contactActions from \"../../redux/contact/contact-actions\";\n\nconst ContactsList = ({\n  items,\n  // deleteContact\n}) => {\n  // render() {\n  //   const { contacts, deleteContact } = this.props;\n  return (\n    <TransitionGroup component=\"ul\" className=\"contacts-list\">\n      {items.map(({ id }) => (\n        <CSSTransition\n          key={id}\n          classNames=\"taskList-fade\"\n          timeout={250}\n          unmountOnExit\n        >\n          <ContactsListItems\n            // contact={contact}\n            // key={id}\n            id={id}\n            //deleteContact={() => deleteContact(id)}\n          />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n  //  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const getFilteredContact = contactSelectors.getContactsFiltered(\n    state,\n    ownProps\n  );\n  // const { items, filter } = state.contacts;\n  // const normalizedFilter = filter.toLowerCase();\n\n  // const getFilteredContact = items.filter((contact) =>\n  //   contact.name.toLowerCase().includes(normalizedFilter)\n  // );\n  // console.log(\"getFilteredContact\", getFilteredContact);\n  return {\n    items: getFilteredContact,\n  };\n};\n// const getFilteredContacts = (state) => {\n//   const { items, filter } = state.contacts;\n\n//   const getfilteredContacts = items.filter((contact) =>\n//     contact.name.toLowerCase().includes(filter.toLowerCase())\n//   );\n//   return {\n//     contacts: getfilteredContacts,\n//   };\n// };\n// const mapStateToProps = ({ contacts: { items, filter } }) => ({\n//   contacts: getFilteredContacts(items, filter),\n// });\n// const mapDispatchToProps = {\n//   deleteContact: contactActions.deleteContact,\n// };\n// export default connect(\n//   mapStateToProps\n//   //  mapDispatchToProps\n// )(ContactsList);\n// //export default ContactsList;\nexport default connect(mapStateToProps)(ContactsList);\n"]},"metadata":{},"sourceType":"module"}