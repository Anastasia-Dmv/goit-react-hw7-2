{"ast":null,"code":"import _defineProperty from\"/Users/anastasia/Documents/React-BC-22/goit-react-hw-06-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"/Users/anastasia/Documents/React-BC-22/goit-react-hw-06-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";var _createReducer;import{combineReducers}from\"redux\";//import actionTypes from \"./contact-types\";\nimport actionTypes from\"./contact-actions\";import{createReducer}from\"@reduxjs/toolkit\";var items=createReducer([],(_createReducer={},_defineProperty(_createReducer,actionTypes.addContact,function(state,action){return[].concat(_toConsumableArray(state),[action.payload.contact]);}),_defineProperty(_createReducer,actionTypes.deleteContact,function(state,action){return state.filter(function(contact){return contact.id!==action.payload;});}),_defineProperty(_createReducer,actionTypes.saveInStorage,function(state,action){return action.payload;}),_createReducer));var filter=createReducer(\"\",_defineProperty({},actionTypes.changeFilter,function(state,action){return action.payload;}));// {\n//   contacts: {\n//     items: [],\n//     filter: ''\n//   }\n// }\n// export const items = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case actionTypes.addContact.type:\n//       return [...state, payload.contact];\n//     case actionTypes.deleteContact.type:\n//       return state.filter((contact) => contact.id !== payload);\n//     default:\n//       return state;\n//   }\n// };\n// export const filter = (state = \"\", { type, payload }) => {\n//   switch (type) {\n//     case actionTypes.changeFilter.type:\n//       return payload;\n//     default:\n//       return state;\n//   }\n// };\nexport default combineReducers({items:items,filter:filter});","map":{"version":3,"sources":["/Users/anastasia/Documents/React-BC-22/goit-react-hw-06-phonebook/src/redux/contact/contact-reducer.js"],"names":["combineReducers","actionTypes","createReducer","items","addContact","state","action","payload","contact","deleteContact","filter","id","saveInStorage","changeFilter"],"mappings":"6YAAA,OAASA,eAAT,KAAgC,OAAhC,CACA;AACA,MAAOC,CAAAA,WAAP,KAAwB,mBAAxB,CAEA,OAASC,aAAT,KAA8B,kBAA9B,CAEA,GAAMC,CAAAA,KAAK,CAAGD,aAAa,CAAC,EAAD,mDACxBD,WAAW,CAACG,UADY,CACC,SAACC,KAAD,CAAQC,MAAR,qCACrBD,KADqB,GAExBC,MAAM,CAACC,OAAP,CAAeC,OAFS,IADD,iCAKxBP,WAAW,CAACQ,aALY,CAKI,SAACJ,KAAD,CAAQC,MAAR,QAC3BD,CAAAA,KAAK,CAACK,MAAN,CAAa,SAACF,OAAD,QAAaA,CAAAA,OAAO,CAACG,EAAR,GAAeL,MAAM,CAACC,OAAnC,EAAb,CAD2B,EALJ,iCAOxBN,WAAW,CAACW,aAPY,CAOI,SAACP,KAAD,CAAQC,MAAR,QAAmBA,CAAAA,MAAM,CAACC,OAA1B,EAPJ,kBAA3B,CAUA,GAAMG,CAAAA,MAAM,CAAGR,aAAa,CAAC,EAAD,oBACzBD,WAAW,CAACY,YADa,CACE,SAACR,KAAD,CAAQC,MAAR,QAAmBA,CAAAA,MAAM,CAACC,OAA1B,EADF,EAA5B,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,cAAeP,CAAAA,eAAe,CAAC,CAC7BG,KAAK,CAALA,KAD6B,CAE7BO,MAAM,CAANA,MAF6B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from \"redux\";\n//import actionTypes from \"./contact-types\";\nimport actionTypes from \"./contact-actions\";\n\nimport { createReducer } from \"@reduxjs/toolkit\";\n\nconst items = createReducer([], {\n  [actionTypes.addContact]: (state, action) => [\n    ...state,\n    action.payload.contact,\n  ],\n  [actionTypes.deleteContact]: (state, action) =>\n    state.filter((contact) => contact.id !== action.payload),\n  [actionTypes.saveInStorage]: (state, action) => action.payload,\n});\n\nconst filter = createReducer(\"\", {\n  [actionTypes.changeFilter]: (state, action) => action.payload,\n});\n\n// {\n//   contacts: {\n//     items: [],\n//     filter: ''\n//   }\n// }\n// export const items = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case actionTypes.addContact.type:\n//       return [...state, payload.contact];\n//     case actionTypes.deleteContact.type:\n//       return state.filter((contact) => contact.id !== payload);\n//     default:\n//       return state;\n//   }\n// };\n// export const filter = (state = \"\", { type, payload }) => {\n//   switch (type) {\n//     case actionTypes.changeFilter.type:\n//       return payload;\n//     default:\n//       return state;\n//   }\n// };\n\nexport default combineReducers({\n  items,\n  filter,\n});\n"]},"metadata":{},"sourceType":"module"}