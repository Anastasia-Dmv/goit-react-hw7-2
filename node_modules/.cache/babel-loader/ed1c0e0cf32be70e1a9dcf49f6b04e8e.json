{"ast":null,"code":"//import actionTypes from \"./contact-types\";\n//import { v4 as uuidv4 } from \"uuid\";\nimport{createAction}from\"@reduxjs/toolkit\";var addContactRequest=createAction(\"contacts/addRequest\");var addContactSuccess=createAction(\"contacts/addSuccess\");var addContactError=createAction(\"contacts/addError\");var removeContactRequest=createAction(\"contacts/removeRequest\");var removeContactSuccess=createAction(\"contacts/removeSuccess\");var removeContactError=createAction(\"contacts/aremoverror\");var fetchContactsRequest=createAction(\"contactfetchRequest\");var fetchContactsSuccess=createAction(\"contacts/fetchSuccess\");var fetchContactsError=createAction(\"contacts/fetchError\");// const addContact = createAction(\"contact/AddContact\", (name, number) => ({\n//   payload: {\n//     contact: {\n//       name: name,\n//       number: number,\n//       id: uuidv4(),\n//     },\n//   },\n// }));\n//const deleteContact = createAction(\"contact/Delete\");\nvar changeFilter=createAction(\"contact/changeFilter\");//const saveInStorage = createAction(\"contact/saveInStorage\");\nexport default{removeContactRequest:removeContactRequest,removeContactSuccess:removeContactSuccess,removeContactError:removeContactError,addContactError:addContactError,addContactSuccess:addContactSuccess,addContactRequest:addContactRequest,//addContact,\n//deleteContact,\nchangeFilter:changeFilter,//saveInStorage,\nfetchContactsRequest:fetchContactsRequest,fetchContactsSuccess:fetchContactsSuccess,fetchContactsError:fetchContactsError};//=============without toolkit====\n// const addContact = (name, number) => ({\n//   type: actionTypes.ADDCONTACT,\n//   payload: {\n//     contact: {\n//       name: name,\n//       number: number,\n//       id: uuidv4(),\n//     },\n//   },\n// });\n// const deleteContact = (id) => ({\n//   type: actionTypes.DELETE_CONTACT,\n//   payload: {\n//     id,\n//   },\n// });\n// const changeFilter = (filter) => ({\n//   type: actionTypes.CHANGE_FILTER,\n//   payload: {\n//     filter,\n//   },\n// });","map":{"version":3,"sources":["/Users/anastasia/Documents/React-BC-22/goit-react-hw-07-phonebook/src/redux/contact/contact-actions.js"],"names":["createAction","addContactRequest","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","changeFilter"],"mappings":"AAAA;AACA;AACA,OAASA,YAAT,KAA6B,kBAA7B,CAEA,GAAMC,CAAAA,iBAAiB,CAAGD,YAAY,CAAC,qBAAD,CAAtC,CACA,GAAME,CAAAA,iBAAiB,CAAGF,YAAY,CAAC,qBAAD,CAAtC,CACA,GAAMG,CAAAA,eAAe,CAAGH,YAAY,CAAC,mBAAD,CAApC,CAEA,GAAMI,CAAAA,oBAAoB,CAAGJ,YAAY,CAAC,wBAAD,CAAzC,CACA,GAAMK,CAAAA,oBAAoB,CAAGL,YAAY,CAAC,wBAAD,CAAzC,CACA,GAAMM,CAAAA,kBAAkB,CAAGN,YAAY,CAAC,sBAAD,CAAvC,CAEA,GAAMO,CAAAA,oBAAoB,CAAGP,YAAY,CAAC,qBAAD,CAAzC,CACA,GAAMQ,CAAAA,oBAAoB,CAAGR,YAAY,CAAC,uBAAD,CAAzC,CACA,GAAMS,CAAAA,kBAAkB,CAAGT,YAAY,CAAC,qBAAD,CAAvC,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAMU,CAAAA,YAAY,CAAGV,YAAY,CAAC,sBAAD,CAAjC,CACA;AACA,cAAe,CACbI,oBAAoB,CAApBA,oBADa,CAEbC,oBAAoB,CAApBA,oBAFa,CAGbC,kBAAkB,CAAlBA,kBAHa,CAKbH,eAAe,CAAfA,eALa,CAMbD,iBAAiB,CAAjBA,iBANa,CAObD,iBAAiB,CAAjBA,iBAPa,CAQb;AACA;AACAS,YAAY,CAAZA,YAVa,CAWb;AACAH,oBAAoB,CAApBA,oBAZa,CAabC,oBAAoB,CAApBA,oBAba,CAcbC,kBAAkB,CAAlBA,kBAda,CAAf,CAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["//import actionTypes from \"./contact-types\";\n//import { v4 as uuidv4 } from \"uuid\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nconst addContactRequest = createAction(\"contacts/addRequest\");\nconst addContactSuccess = createAction(\"contacts/addSuccess\");\nconst addContactError = createAction(\"contacts/addError\");\n\nconst removeContactRequest = createAction(\"contacts/removeRequest\");\nconst removeContactSuccess = createAction(\"contacts/removeSuccess\");\nconst removeContactError = createAction(\"contacts/aremoverror\");\n\nconst fetchContactsRequest = createAction(\"contactfetchRequest\");\nconst fetchContactsSuccess = createAction(\"contacts/fetchSuccess\");\nconst fetchContactsError = createAction(\"contacts/fetchError\");\n\n// const addContact = createAction(\"contact/AddContact\", (name, number) => ({\n//   payload: {\n//     contact: {\n//       name: name,\n//       number: number,\n//       id: uuidv4(),\n//     },\n//   },\n// }));\n//const deleteContact = createAction(\"contact/Delete\");\nconst changeFilter = createAction(\"contact/changeFilter\");\n//const saveInStorage = createAction(\"contact/saveInStorage\");\nexport default {\n  removeContactRequest,\n  removeContactSuccess,\n  removeContactError,\n\n  addContactError,\n  addContactSuccess,\n  addContactRequest,\n  //addContact,\n  //deleteContact,\n  changeFilter,\n  //saveInStorage,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n};\n//=============without toolkit====\n// const addContact = (name, number) => ({\n//   type: actionTypes.ADDCONTACT,\n//   payload: {\n//     contact: {\n//       name: name,\n//       number: number,\n//       id: uuidv4(),\n//     },\n//   },\n// });\n// const deleteContact = (id) => ({\n//   type: actionTypes.DELETE_CONTACT,\n//   payload: {\n//     id,\n//   },\n// });\n\n// const changeFilter = (filter) => ({\n//   type: actionTypes.CHANGE_FILTER,\n//   payload: {\n//     filter,\n//   },\n// });\n"]},"metadata":{},"sourceType":"module"}