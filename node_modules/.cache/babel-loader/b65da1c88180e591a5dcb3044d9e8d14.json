{"ast":null,"code":"//import actionTypes from \"./contact-types\";\nimport{v4 as uuidv4}from\"uuid\";import{createAction}from\"@reduxjs/toolkit\";var addContact=createAction(\"contact/AddContact\",function(name,number){return{payload:{contact:{name:name,number:number,id:uuidv4()}}};});var deleteContact=createAction(\"contact/Delete\");var changeFilter=createAction(\"contact/changeFilter\");var saveInStorage=createAction(\"contact/saveInStorage\");export default{addContact:addContact,deleteContact:deleteContact,changeFilter:changeFilter,saveInStorage:saveInStorage};//=============without toolkit====\n// const addContact = (name, number) => ({\n//   type: actionTypes.ADDCONTACT,\n//   payload: {\n//     contact: {\n//       name: name,\n//       number: number,\n//       id: uuidv4(),\n//     },\n//   },\n// });\n// const deleteContact = (id) => ({\n//   type: actionTypes.DELETE_CONTACT,\n//   payload: {\n//     id,\n//   },\n// });\n// const changeFilter = (filter) => ({\n//   type: actionTypes.CHANGE_FILTER,\n//   payload: {\n//     filter,\n//   },\n// });","map":{"version":3,"sources":["/Users/anastasia/Documents/React-BC-22/goit-react-hw-06-phonebook/src/redux/contact/contact-actions.js"],"names":["v4","uuidv4","createAction","addContact","name","number","payload","contact","id","deleteContact","changeFilter","saveInStorage"],"mappings":"AAAA;AACA,OAASA,EAAE,GAAIC,CAAAA,MAAf,KAA6B,MAA7B,CACA,OAASC,YAAT,KAA6B,kBAA7B,CAEA,GAAMC,CAAAA,UAAU,CAAGD,YAAY,CAAC,oBAAD,CAAuB,SAACE,IAAD,CAAOC,MAAP,QAAmB,CACvEC,OAAO,CAAE,CACPC,OAAO,CAAE,CACPH,IAAI,CAAEA,IADC,CAEPC,MAAM,CAAEA,MAFD,CAGPG,EAAE,CAAEP,MAAM,EAHH,CADF,CAD8D,CAAnB,EAAvB,CAA/B,CASA,GAAMQ,CAAAA,aAAa,CAAGP,YAAY,CAAC,gBAAD,CAAlC,CACA,GAAMQ,CAAAA,YAAY,CAAGR,YAAY,CAAC,sBAAD,CAAjC,CACA,GAAMS,CAAAA,aAAa,CAAGT,YAAY,CAAC,uBAAD,CAAlC,CACA,cAAe,CAAEC,UAAU,CAAVA,UAAF,CAAcM,aAAa,CAAbA,aAAd,CAA6BC,YAAY,CAAZA,YAA7B,CAA2CC,aAAa,CAAbA,aAA3C,CAAf,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["//import actionTypes from \"./contact-types\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nconst addContact = createAction(\"contact/AddContact\", (name, number) => ({\n  payload: {\n    contact: {\n      name: name,\n      number: number,\n      id: uuidv4(),\n    },\n  },\n}));\nconst deleteContact = createAction(\"contact/Delete\");\nconst changeFilter = createAction(\"contact/changeFilter\");\nconst saveInStorage = createAction(\"contact/saveInStorage\");\nexport default { addContact, deleteContact, changeFilter, saveInStorage };\n//=============without toolkit====\n// const addContact = (name, number) => ({\n//   type: actionTypes.ADDCONTACT,\n//   payload: {\n//     contact: {\n//       name: name,\n//       number: number,\n//       id: uuidv4(),\n//     },\n//   },\n// });\n// const deleteContact = (id) => ({\n//   type: actionTypes.DELETE_CONTACT,\n//   payload: {\n//     id,\n//   },\n// });\n\n// const changeFilter = (filter) => ({\n//   type: actionTypes.CHANGE_FILTER,\n//   payload: {\n//     filter,\n//   },\n// });\n"]},"metadata":{},"sourceType":"module"}