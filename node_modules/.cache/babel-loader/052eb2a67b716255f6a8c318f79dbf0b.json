{"ast":null,"code":"var _jsxFileName = \"/Users/anastasia/Documents/React-BC-22/goit-react-hw-06-phonebook/src/components/contactsList/ContactsList.js\";\nimport React from \"react\";\nimport ContactsListItems from \"../contactListItems/ContactsListItems\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { connect } from \"react-redux\"; //import contactActions from \"../../redux/contact/contact-actions\";\n\nconst ContactsList = ({\n  contacts // deleteContact\n\n}) => {\n  // render() {\n  //   const { contacts, deleteContact } = this.props;\n  return /*#__PURE__*/React.createElement(TransitionGroup, {\n    component: \"ul\",\n    className: \"contacts-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, contacts.map(({\n    id\n  }) => /*#__PURE__*/React.createElement(CSSTransition, {\n    key: id,\n    classNames: \"taskList-fade\",\n    timeout: 250,\n    unmountOnExit: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ContactsListItems // contact={contact}\n  // key={id}\n  , {\n    id: id //deleteContact={() => deleteContact(id)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  })))); //  }\n};\n\nconst mapStateToProps = state => {\n  const {\n    items,\n    filter\n  } = state.contacts;\n  const normalizedFilter = filter.toLowerCase();\n  const getFilteredContact = items.filter(contact => contact.toLowerCase().includes(normalizedFilter));\n  console.log(\"getFilteredContact\", getFilteredContact);\n  return {\n    contacts: getFilteredContact\n  };\n}; // const getFilteredContacts = (state) => {\n//   const { items, filter } = state.contacts;\n//   const getfilteredContacts = items.filter((contact) =>\n//     contact.name.toLowerCase().includes(filter.toLowerCase())\n//   );\n//   return {\n//     contacts: getfilteredContacts,\n//   };\n// };\n// const mapStateToProps = ({ contacts: { items, filter } }) => ({\n//   contacts: getFilteredContacts(items, filter),\n// });\n// const mapDispatchToProps = {\n//   deleteContact: contactActions.deleteContact,\n// };\n// export default connect(\n//   mapStateToProps\n//   //  mapDispatchToProps\n// )(ContactsList);\n// //export default ContactsList;\n\n\nexport default connect(mapStateToProps)(ContactsList);","map":{"version":3,"sources":["/Users/anastasia/Documents/React-BC-22/goit-react-hw-06-phonebook/src/components/contactsList/ContactsList.js"],"names":["React","ContactsListItems","CSSTransition","TransitionGroup","connect","ContactsList","contacts","map","id","mapStateToProps","state","items","filter","normalizedFilter","toLowerCase","getFilteredContact","contact","includes","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AAEA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,QADoB,CAEpB;;AAFoB,CAAD,KAGf;AACJ;AACA;AACA,sBACE,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,IAA3B;AAAgC,IAAA,SAAS,EAAC,eAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QAAQ,CAACC,GAAT,CAAa,CAAC;AAAEC,IAAAA;AAAF,GAAD,kBACZ,oBAAC,aAAD;AACE,IAAA,GAAG,EAAEA,EADP;AAEE,IAAA,UAAU,EAAC,eAFb;AAGE,IAAA,OAAO,EAAE,GAHX;AAIE,IAAA,aAAa,MAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,iBAAD,CACE;AACA;AAFF;AAGE,IAAA,EAAE,EAAEA,EAHN,CAIE;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADD,CADH,CADF,CAHI,CAsBJ;AACD,CA1BD;;AA4BA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAoBF,KAAK,CAACJ,QAAhC;AACA,QAAMO,gBAAgB,GAAGD,MAAM,CAACE,WAAP,EAAzB;AAEA,QAAMC,kBAAkB,GAAGJ,KAAK,CAACC,MAAN,CAAcI,OAAD,IACtCA,OAAO,CAACF,WAAR,GAAsBG,QAAtB,CAA+BJ,gBAA/B,CADyB,CAA3B;AAGAK,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCJ,kBAAlC;AACA,SAAO;AACLT,IAAAA,QAAQ,EAAES;AADL,GAAP;AAGD,CAXD,C,CAYA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAeX,OAAO,CAACK,eAAD,CAAP,CAAyBJ,YAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport ContactsListItems from \"../contactListItems/ContactsListItems\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\n//import contactActions from \"../../redux/contact/contact-actions\";\n\nconst ContactsList = ({\n  contacts,\n  // deleteContact\n}) => {\n  // render() {\n  //   const { contacts, deleteContact } = this.props;\n  return (\n    <TransitionGroup component=\"ul\" className=\"contacts-list\">\n      {contacts.map(({ id }) => (\n        <CSSTransition\n          key={id}\n          classNames=\"taskList-fade\"\n          timeout={250}\n          unmountOnExit\n        >\n          <ContactsListItems\n            // contact={contact}\n            // key={id}\n            id={id}\n            //deleteContact={() => deleteContact(id)}\n          />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n  //  }\n};\n\nconst mapStateToProps = (state) => {\n  const { items, filter } = state.contacts;\n  const normalizedFilter = filter.toLowerCase();\n\n  const getFilteredContact = items.filter((contact) =>\n    contact.toLowerCase().includes(normalizedFilter)\n  );\n  console.log(\"getFilteredContact\", getFilteredContact);\n  return {\n    contacts: getFilteredContact,\n  };\n};\n// const getFilteredContacts = (state) => {\n//   const { items, filter } = state.contacts;\n\n//   const getfilteredContacts = items.filter((contact) =>\n//     contact.name.toLowerCase().includes(filter.toLowerCase())\n//   );\n//   return {\n//     contacts: getfilteredContacts,\n//   };\n// };\n// const mapStateToProps = ({ contacts: { items, filter } }) => ({\n//   contacts: getFilteredContacts(items, filter),\n// });\n// const mapDispatchToProps = {\n//   deleteContact: contactActions.deleteContact,\n// };\n// export default connect(\n//   mapStateToProps\n//   //  mapDispatchToProps\n// )(ContactsList);\n// //export default ContactsList;\nexport default connect(mapStateToProps)(ContactsList);\n"]},"metadata":{},"sourceType":"module"}