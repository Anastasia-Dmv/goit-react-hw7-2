{"ast":null,"code":"var _jsxFileName = \"/Users/anastasia/Documents/React-BC-22/goit-react-hw-06-phonebook/src/components/app/App.js\";\nimport React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { connect } from \"react-redux\"; //import contactsActions from \"../../redux/contact/contact-actions\";\n\nimport MainTitle from \"../mainTitle/MainTitle\";\nimport ContactForm from \"../contactForm/ContactForm\";\nimport FindContactInput from \"../findContactInput/FindContactInput\";\nimport ContactsList from \"../contactsList/ContactsList\";\nimport { CSSTransition } from \"react-transition-group\";\nimport contactActions from \"../../redux/contact/contact-actions\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //   contacts: [\n      //     // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      //     // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      //     // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      //     // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n      //   ],\n      //   filter: \"\",\n      showContacts: false\n    };\n  }\n\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem(\"contacts\");\n\n    if (persistedContacts) {\n      this.setState({\n        contacts: JSON.parse(persistedContacts)\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  } // addContact = (name, number) => {\n  //   const contact = {\n  //     name: name,\n  //     number: number,\n  //     id: uuidv4(),\n  //   };\n  //   this.setState((prevState) => {\n  //     return {\n  //       contacts: [...prevState.contacts, contact],\n  //       showContacts: true,\n  //     };\n  //   });\n  // };\n  // changeFilter = (filter) => {\n  //   this.setState({ filter });\n  // };\n  // getFilteredContacts = () => {\n  //   const { contacts, filter } = this.state;\n  //   return contacts.filter((contact) =>\n  //     contact.name.toLowerCase().includes(filter.toLowerCase())\n  //   );\n  // };\n  // handleDelete = (id) => {\n  //   this.setState((prevState) => ({\n  //     contacts: prevState.contacts.filter((contact) => contact.id !== id),\n  //   }));\n  // };\n\n\n  render() {\n    const {\n      filter\n    } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CSSTransition, {\n      in: true,\n      appear: true,\n      classNames: \"mainTitle-slideIn\",\n      timeout: 5000,\n      unmountOnExit: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MainTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(ContactForm, {\n      addContact: this.addContact,\n      contacts: filteredContacts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CSSTransition, {\n      in: this.state.contacts.length > 1,\n      timeout: 250,\n      classNames: \"findContact\",\n      unmountOnExit: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FindContactInput, {\n      value: filter,\n      onChangeFilter: this.changeFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    })), filteredContacts.length > 0 && /*#__PURE__*/React.createElement(ContactsList, {\n      deleteContact: this.handleDelete,\n      contacts: filteredContacts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    items,\n    filter\n  } = state.contacts;\n  const filteredContacts = items.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  return {\n    items: filteredContacts\n  };\n};\n\nconst mapDispatchToProps = {\n  onChangeFilter: contactActions.changeFilter\n}; //const mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App); //export default App;","map":{"version":3,"sources":["/Users/anastasia/Documents/React-BC-22/goit-react-hw-06-phonebook/src/components/app/App.js"],"names":["React","Component","v4","uuidv4","connect","MainTitle","ContactForm","FindContactInput","ContactsList","CSSTransition","contactActions","App","state","showContacts","componentDidMount","persistedContacts","localStorage","getItem","setState","contacts","JSON","parse","componentDidUpdate","prevProps","prevState","setItem","stringify","render","filter","filteredContacts","getFilteredContacts","addContact","length","changeFilter","handleDelete","mapStateToProps","items","contact","name","toLowerCase","includes","mapDispatchToProps","onChangeFilter"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { connect } from \"react-redux\";\n//import contactsActions from \"../../redux/contact/contact-actions\";\n\nimport MainTitle from \"../mainTitle/MainTitle\";\nimport ContactForm from \"../contactForm/ContactForm\";\nimport FindContactInput from \"../findContactInput/FindContactInput\";\nimport ContactsList from \"../contactsList/ContactsList\";\nimport { CSSTransition } from \"react-transition-group\";\nimport contactActions from \"../../redux/contact/contact-actions\";\n\nclass App extends Component {\n  state = {\n    //   contacts: [\n    //     // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    //     // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    //     // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    //     // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    //   ],\n    //   filter: \"\",\n    showContacts: false,\n  };\n\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem(\"contacts\");\n    if (persistedContacts) {\n      this.setState({ contacts: JSON.parse(persistedContacts) });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n  // addContact = (name, number) => {\n  //   const contact = {\n  //     name: name,\n  //     number: number,\n  //     id: uuidv4(),\n  //   };\n\n  //   this.setState((prevState) => {\n  //     return {\n  //       contacts: [...prevState.contacts, contact],\n  //       showContacts: true,\n  //     };\n  //   });\n  // };\n  // changeFilter = (filter) => {\n  //   this.setState({ filter });\n  // };\n\n  // getFilteredContacts = () => {\n  //   const { contacts, filter } = this.state;\n\n  //   return contacts.filter((contact) =>\n  //     contact.name.toLowerCase().includes(filter.toLowerCase())\n  //   );\n  // };\n  // handleDelete = (id) => {\n  //   this.setState((prevState) => ({\n  //     contacts: prevState.contacts.filter((contact) => contact.id !== id),\n  //   }));\n  // };\n\n  render() {\n    const { filter } = this.state;\n\n    const filteredContacts = this.getFilteredContacts();\n    return (\n      <div>\n        <CSSTransition\n          in={true}\n          appear={true}\n          classNames=\"mainTitle-slideIn\"\n          timeout={5000}\n          unmountOnExit\n        >\n          <MainTitle />\n        </CSSTransition>\n\n        <ContactForm addContact={this.addContact} contacts={filteredContacts} />\n\n        <CSSTransition\n          in={this.state.contacts.length > 1}\n          timeout={250}\n          classNames=\"findContact\"\n          unmountOnExit\n        >\n          {/* {filteredContacts.length > 1 && ( */}\n          <FindContactInput value={filter} onChangeFilter={this.changeFilter} />\n          {/* )} */}\n        </CSSTransition>\n\n        {/* <CSSTransition in={showContacts} inmountOnExit> */}\n        {filteredContacts.length > 0 && (\n          <ContactsList\n            deleteContact={this.handleDelete}\n            contacts={filteredContacts}\n          />\n        )}\n        {/* </CSSTransition> */}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  const { items, filter } = state.contacts;\n\n  const filteredContacts = items.filter((contact) =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n  return {\n    items: filteredContacts,\n  };\n};\nconst mapDispatchToProps = {\n  onChangeFilter: contactActions.changeFilter,\n};\n//const mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n//export default App;\n"]},"metadata":{},"sourceType":"module"}