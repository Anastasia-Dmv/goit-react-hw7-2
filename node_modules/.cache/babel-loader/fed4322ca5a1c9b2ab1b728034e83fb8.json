{"ast":null,"code":"import _objectSpread from\"/Users/anastasia/Documents/React-BC-22/goit-react-hw-07-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from\"react\";// import { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport{connect}from\"react-redux\";import contactsOperation from\"../../redux/contactsOperations/contactsOperation\";import contactSelectors from\"../../redux/contact/contact-selectors\";//import contactActions from \"../../redux/contact/contact-actions\";\nvar ContactsListItems=function ContactsListItems(_ref){var id=_ref.id,name=_ref.name,number=_ref.number,deleteContact=_ref.deleteContact;// render() {\n//   const {\n//     contact: { name, id, number },\n//     deleteContact,\n//   } = this.props;\nreturn/*#__PURE__*/React.createElement(\"li\",{className:\"contact\"},/*#__PURE__*/React.createElement(\"span\",null,name),/*#__PURE__*/React.createElement(\"span\",null,number),/*#__PURE__*/React.createElement(\"button\",{className:\"deleteBtn\",type:\"button\"// id={id}\n,onClick:function onClick(){return deleteContact(id);}},\"x\"));};// }\nvar mapStateToProps=function mapStateToProps(state,ownProps){var item=contactSelectors.getContactById(state,ownProps.id);return _objectSpread({},item);// const item = state.contacts.items.find((item) => item.id === ownProps.id);\n// console.log(\"item\", item);\n// console.log(\"item\", item);\n// return { ...item };\n};var mapDispatchToPRops=function mapDispatchToPRops(dispatch,ownProps){return{deleteContact:function deleteContact(id){return dispatch(contactsOperation.removeContact(ownProps.id));}};};export default connect(mapStateToProps,mapDispatchToPRops)(ContactsListItems);","map":{"version":3,"sources":["/Users/anastasia/Documents/React-BC-22/goit-react-hw-07-phonebook/src/components/contactListItems/ContactsListItems.js"],"names":["React","connect","contactsOperation","contactSelectors","ContactsListItems","id","name","number","deleteContact","mapStateToProps","state","ownProps","item","getContactById","mapDispatchToPRops","dispatch","removeContact"],"mappings":"uLAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA;AACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,kDAA9B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,uCAA7B,CACA;AAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,MAAyC,IAAtCC,CAAAA,EAAsC,MAAtCA,EAAsC,CAAlCC,IAAkC,MAAlCA,IAAkC,CAA5BC,MAA4B,MAA5BA,MAA4B,CAApBC,aAAoB,MAApBA,aAAoB,CACjE;AACA;AACA;AACA;AACA;AACA,mBACE,0BAAI,SAAS,CAAC,SAAd,eACE,gCAAOF,IAAP,CADF,cAEE,gCAAOC,MAAP,CAFF,cAGE,8BACE,SAAS,CAAC,WADZ,CAEE,IAAI,CAAC,QACL;AAHF,CAIE,OAAO,CAAE,yBAAMC,CAAAA,aAAa,CAACH,EAAD,CAAnB,EAJX,MAHF,CADF,CAcD,CApBD,CAqBA;AACA,GAAMI,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAQC,QAAR,CAAqB,CAC3C,GAAMC,CAAAA,IAAI,CAAGT,gBAAgB,CAACU,cAAjB,CAAgCH,KAAhC,CAAuCC,QAAQ,CAACN,EAAhD,CAAb,CACA,wBAAYO,IAAZ,EACA;AACA;AACA;AACA;AACD,CAPD,CAQA,GAAME,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAWJ,QAAX,QAAyB,CAClDH,aAAa,CAAE,uBAACH,EAAD,QAAQU,CAAAA,QAAQ,CAACb,iBAAiB,CAACc,aAAlB,CAAgCL,QAAQ,CAACN,EAAzC,CAAD,CAAhB,EADmC,CAAzB,EAA3B,CAGA,cAAeJ,CAAAA,OAAO,CAACQ,eAAD,CAAkBK,kBAAlB,CAAP,CAA6CV,iBAA7C,CAAf","sourcesContent":["import React from \"react\";\n// import { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport contactsOperation from \"../../redux/contactsOperations/contactsOperation\";\nimport contactSelectors from \"../../redux/contact/contact-selectors\";\n//import contactActions from \"../../redux/contact/contact-actions\";\n\nconst ContactsListItems = ({ id, name, number, deleteContact }) => {\n  // render() {\n  //   const {\n  //     contact: { name, id, number },\n  //     deleteContact,\n  //   } = this.props;\n  return (\n    <li className=\"contact\">\n      <span>{name}</span>\n      <span>{number}</span>\n      <button\n        className=\"deleteBtn\"\n        type=\"button\"\n        // id={id}\n        onClick={() => deleteContact(id)}\n      >\n        x\n      </button>\n    </li>\n  );\n};\n// }\nconst mapStateToProps = (state, ownProps) => {\n  const item = contactSelectors.getContactById(state, ownProps.id);\n  return { ...item };\n  // const item = state.contacts.items.find((item) => item.id === ownProps.id);\n  // console.log(\"item\", item);\n  // console.log(\"item\", item);\n  // return { ...item };\n};\nconst mapDispatchToPRops = (dispatch, ownProps) => ({\n  deleteContact: (id) => dispatch(contactsOperation.removeContact(ownProps.id)),\n});\nexport default connect(mapStateToProps, mapDispatchToPRops)(ContactsListItems);\n"]},"metadata":{},"sourceType":"module"}