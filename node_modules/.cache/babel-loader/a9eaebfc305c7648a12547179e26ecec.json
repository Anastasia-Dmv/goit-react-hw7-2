{"ast":null,"code":"var _jsxFileName = \"/Users/anastasia/Documents/React-BC-22/goit-react-hw-06-phonebook/src/components/findContactInput/FindContactInput.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport contactActions from \"../../redux/contact/contact-actions\";\nimport contactSelectors from \"../../redux/contact/contact-selectors\";\n\nfunction FindContactInput({\n  value,\n  onChange\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"find-input_frame \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input\",\n    type: \"text\",\n    value: value,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  })));\n} // const mapStateToProps = (state) => {\n//   const { items, filter } = state.contacts;\n//   const filteredContacts = items.filter((contact) =>\n//     contact.name.toLowerCase().includes(filter.toLowerCase())\n//   );\n//   return {\n//     contacts: filteredContacts,\n//   };\n// };\n\n\nconst mapStateToProps = state => ({\n  value: contactSelectors.getFilter\n}); // const mapDispatchToProps = (dispatch = {\n//   onChangeFilter: (e) => dispatch(contactActions.changeFilter(e.target.value)),\n//   // contactActions.changeFilter,\n// });\n\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(contactActions.changeFilter(e.target.value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FindContactInput);","map":{"version":3,"sources":["/Users/anastasia/Documents/React-BC-22/goit-react-hw-06-phonebook/src/components/findContactInput/FindContactInput.js"],"names":["React","connect","contactActions","contactSelectors","FindContactInput","value","onChange","mapStateToProps","state","getFilter","mapDispatchToProps","dispatch","e","changeFilter","target"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;;AAEA,SAASC,gBAAT,CAA0B;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAA1B,EAA+C;AAC7C,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,OADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAED,KAHT;AAIE,IAAA,QAAQ,EAAEC,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAYD,C,CAED;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCH,EAAAA,KAAK,EAAEF,gBAAgB,CAACM;AADU,CAAZ,CAAxB,C,CAGA;AACA;AACA;AACA;;;AAEA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCL,EAAAA,QAAQ,EAAGM,CAAD,IAAOD,QAAQ,CAACT,cAAc,CAACW,YAAf,CAA4BD,CAAC,CAACE,MAAF,CAAST,KAArC,CAAD;AADe,CAAf,CAA3B;;AAGA,eAAeJ,OAAO,CAACM,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CN,gBAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport contactActions from \"../../redux/contact/contact-actions\";\nimport contactSelectors from \"../../redux/contact/contact-selectors\";\n\nfunction FindContactInput({ value, onChange }) {\n  return (\n    <div className=\"find-input_frame \">\n      <label>\n        <input\n          className=\"input\"\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        ></input>\n      </label>\n    </div>\n  );\n}\n\n// const mapStateToProps = (state) => {\n//   const { items, filter } = state.contacts;\n\n//   const filteredContacts = items.filter((contact) =>\n//     contact.name.toLowerCase().includes(filter.toLowerCase())\n//   );\n//   return {\n//     contacts: filteredContacts,\n//   };\n// };\nconst mapStateToProps = (state) => ({\n  value: contactSelectors.getFilter,\n});\n// const mapDispatchToProps = (dispatch = {\n//   onChangeFilter: (e) => dispatch(contactActions.changeFilter(e.target.value)),\n//   // contactActions.changeFilter,\n// });\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(contactActions.changeFilter(e.target.value)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(FindContactInput);\n"]},"metadata":{},"sourceType":"module"}